
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "advanced_tabular/example_custom_configuration_space.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_advanced_tabular_example_custom_configuration_space.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_advanced_tabular_example_custom_configuration_space.py:


======================
Tabular Classification with Custom Configuration Space
======================

The following example shows how adjust the configuration space of
the search. Currently, there are two changes that can be made to the space:-
1. Adjust individual hyperparameters in the pipeline
2. Include or exclude components:
    a) include: Dictionary containing components to include. Key is the node
                name and Value is an Iterable of the names of the components
                to include. Only these components will be present in the
                search space.
    b) exclude: Dictionary containing components to exclude. Key is the node
                name and Value is an Iterable of the names of the components
                to exclude. All except these components will be present in
                the search space.

.. GENERATED FROM PYTHON SOURCE LINES 19-133




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <smac.runhistory.runhistory.RunHistory object at 0x7fe7ce94bd30> [TrajEntry(train_perf=2147483648, incumbent_id=1, incumbent=Configuration:
      data_loader:batch_size, Value: 32
      encoder:__choice__, Value: 'OneHotEncoder'
      feature_preprocessor:__choice__, Value: 'NoFeaturePreprocessor'
      imputer:categorical_strategy, Value: 'most_frequent'
      imputer:numerical_strategy, Value: 'mean'
      lr_scheduler:ReduceLROnPlateau:factor, Value: 0.1
      lr_scheduler:ReduceLROnPlateau:mode, Value: 'min'
      lr_scheduler:ReduceLROnPlateau:patience, Value: 10
      lr_scheduler:__choice__, Value: 'ReduceLROnPlateau'
      network_backbone:MLPBackbone:activation, Value: 'relu'
      network_backbone:MLPBackbone:num_groups, Value: 5
      network_backbone:MLPBackbone:num_units_1, Value: 200
      network_backbone:MLPBackbone:num_units_2, Value: 200
      network_backbone:MLPBackbone:num_units_3, Value: 200
      network_backbone:MLPBackbone:num_units_4, Value: 200
      network_backbone:MLPBackbone:num_units_5, Value: 200
      network_backbone:MLPBackbone:use_dropout, Value: False
      network_backbone:__choice__, Value: 'MLPBackbone'
      network_embedding:LearnedEntityEmbedding:dimension_reduction_0, Value: 0.5
      network_embedding:LearnedEntityEmbedding:dimension_reduction_1, Value: 0.5
      network_embedding:LearnedEntityEmbedding:dimension_reduction_2, Value: 0.5
      network_embedding:LearnedEntityEmbedding:dimension_reduction_3, Value: 0.5
      network_embedding:LearnedEntityEmbedding:dimension_reduction_4, Value: 0.5
      network_embedding:LearnedEntityEmbedding:dimension_reduction_5, Value: 0.5
      network_embedding:LearnedEntityEmbedding:dimension_reduction_6, Value: 0.5
      network_embedding:LearnedEntityEmbedding:dimension_reduction_7, Value: 0.5
      network_embedding:LearnedEntityEmbedding:min_unique_values_for_embedding, Value: 5
      network_embedding:__choice__, Value: 'LearnedEntityEmbedding'
      network_head:__choice__, Value: 'fully_connected'
      network_head:fully_connected:activation, Value: 'relu'
      network_head:fully_connected:num_layers, Value: 2
      network_head:fully_connected:units_layer_1, Value: 128
      network_init:XavierInit:bias_strategy, Value: 'Normal'
      network_init:__choice__, Value: 'XavierInit'
      optimizer:AdamOptimizer:beta1, Value: 0.9
      optimizer:AdamOptimizer:beta2, Value: 0.9
      optimizer:AdamOptimizer:lr, Value: 0.01
      optimizer:AdamOptimizer:weight_decay, Value: 0.0
      optimizer:__choice__, Value: 'AdamOptimizer'
      scaler:__choice__, Value: 'StandardScaler'
      trainer:StandardTrainer:weighted_loss, Value: True
      trainer:__choice__, Value: 'StandardTrainer'
    , ta_runs=0, ta_time_used=0.0, wallclock_time=0.0020246505737304688, budget=0), TrajEntry(train_perf=0.2573099415204678, incumbent_id=1, incumbent=Configuration:
      data_loader:batch_size, Value: 32
      encoder:__choice__, Value: 'OneHotEncoder'
      feature_preprocessor:__choice__, Value: 'NoFeaturePreprocessor'
      imputer:categorical_strategy, Value: 'most_frequent'
      imputer:numerical_strategy, Value: 'mean'
      lr_scheduler:ReduceLROnPlateau:factor, Value: 0.1
      lr_scheduler:ReduceLROnPlateau:mode, Value: 'min'
      lr_scheduler:ReduceLROnPlateau:patience, Value: 10
      lr_scheduler:__choice__, Value: 'ReduceLROnPlateau'
      network_backbone:MLPBackbone:activation, Value: 'relu'
      network_backbone:MLPBackbone:num_groups, Value: 5
      network_backbone:MLPBackbone:num_units_1, Value: 200
      network_backbone:MLPBackbone:num_units_2, Value: 200
      network_backbone:MLPBackbone:num_units_3, Value: 200
      network_backbone:MLPBackbone:num_units_4, Value: 200
      network_backbone:MLPBackbone:num_units_5, Value: 200
      network_backbone:MLPBackbone:use_dropout, Value: False
      network_backbone:__choice__, Value: 'MLPBackbone'
      network_embedding:LearnedEntityEmbedding:dimension_reduction_0, Value: 0.5
      network_embedding:LearnedEntityEmbedding:dimension_reduction_1, Value: 0.5
      network_embedding:LearnedEntityEmbedding:dimension_reduction_2, Value: 0.5
      network_embedding:LearnedEntityEmbedding:dimension_reduction_3, Value: 0.5
      network_embedding:LearnedEntityEmbedding:dimension_reduction_4, Value: 0.5
      network_embedding:LearnedEntityEmbedding:dimension_reduction_5, Value: 0.5
      network_embedding:LearnedEntityEmbedding:dimension_reduction_6, Value: 0.5
      network_embedding:LearnedEntityEmbedding:dimension_reduction_7, Value: 0.5
      network_embedding:LearnedEntityEmbedding:min_unique_values_for_embedding, Value: 5
      network_embedding:__choice__, Value: 'LearnedEntityEmbedding'
      network_head:__choice__, Value: 'fully_connected'
      network_head:fully_connected:activation, Value: 'relu'
      network_head:fully_connected:num_layers, Value: 2
      network_head:fully_connected:units_layer_1, Value: 128
      network_init:XavierInit:bias_strategy, Value: 'Normal'
      network_init:__choice__, Value: 'XavierInit'
      optimizer:AdamOptimizer:beta1, Value: 0.9
      optimizer:AdamOptimizer:beta2, Value: 0.9
      optimizer:AdamOptimizer:lr, Value: 0.01
      optimizer:AdamOptimizer:weight_decay, Value: 0.0
      optimizer:__choice__, Value: 'AdamOptimizer'
      scaler:__choice__, Value: 'StandardScaler'
      trainer:StandardTrainer:weighted_loss, Value: True
      trainer:__choice__, Value: 'StandardTrainer'
    , ta_runs=1, ta_time_used=5.361257076263428, wallclock_time=6.860819101333618, budget=5.555555555555555)]
    {'accuracy': 0.8728323699421965}
    |    | Preprocessing                                        | Estimator                                                    |   Weight |
    |---:|:-----------------------------------------------------|:-------------------------------------------------------------|---------:|
    |  0 | SimpleImputer,OneHotEncoder,StandardScaler,KernelPCA | no embedding,ResNetBackbone,FullyConnectedHead,nn.Sequential |     0.4  |
    |  1 | SimpleImputer,OneHotEncoder,NoScaler,Nystroem        | embedding,MLPBackbone,FullyConnectedHead,nn.Sequential       |     0.34 |
    |  2 | None                                                 | CatBoostClassifier                                           |     0.08 |
    |  3 | None                                                 | RFClassifier                                                 |     0.08 |
    |  4 | None                                                 | ExtraTreesClassifier                                         |     0.08 |
    |  5 | None                                                 | KNNClassifier                                                |     0.02 |
    <smac.runhistory.runhistory.RunHistory object at 0x7fe7ce81b970> [TrajEntry(train_perf=2147483648, incumbent_id=1, incumbent=Configuration:
      data_loader:batch_size, Value: 32
      encoder:__choice__, Value: 'NoEncoder'
      feature_preprocessor:__choice__, Value: 'NoFeaturePreprocessor'
      imputer:categorical_strategy, Value: 'most_frequent'
      imputer:numerical_strategy, Value: 'mean'
      lr_scheduler:ReduceLROnPlateau:factor, Value: 0.1
      lr_scheduler:ReduceLROnPlateau:mode, Value: 'min'
      lr_scheduler:ReduceLROnPlateau:patience, Value: 10
      lr_scheduler:__choice__, Value: 'ReduceLROnPlateau'
      network_backbone:ShapedMLPBackbone:activation, Value: 'relu'
      network_backbone:ShapedMLPBackbone:max_units, Value: 200
      network_backbone:ShapedMLPBackbone:mlp_shape, Value: 'funnel'
      network_backbone:ShapedMLPBackbone:num_groups, Value: 5
      network_backbone:ShapedMLPBackbone:output_dim, Value: 200
      network_backbone:ShapedMLPBackbone:use_dropout, Value: False
      network_backbone:__choice__, Value: 'ShapedMLPBackbone'
      network_embedding:__choice__, Value: 'NoEmbedding'
      network_head:__choice__, Value: 'fully_connected'
      network_head:fully_connected:activation, Value: 'relu'
      network_head:fully_connected:num_layers, Value: 2
      network_head:fully_connected:units_layer_1, Value: 128
      network_init:XavierInit:bias_strategy, Value: 'Normal'
      network_init:__choice__, Value: 'XavierInit'
      optimizer:AdamOptimizer:beta1, Value: 0.9
      optimizer:AdamOptimizer:beta2, Value: 0.9
      optimizer:AdamOptimizer:lr, Value: 0.01
      optimizer:AdamOptimizer:weight_decay, Value: 0.0
      optimizer:__choice__, Value: 'AdamOptimizer'
      scaler:__choice__, Value: 'StandardScaler'
      trainer:StandardTrainer:weighted_loss, Value: True
      trainer:__choice__, Value: 'StandardTrainer'
    , ta_runs=0, ta_time_used=0.0, wallclock_time=0.001596689224243164, budget=0), TrajEntry(train_perf=0.216374269005848, incumbent_id=1, incumbent=Configuration:
      data_loader:batch_size, Value: 32
      encoder:__choice__, Value: 'NoEncoder'
      feature_preprocessor:__choice__, Value: 'NoFeaturePreprocessor'
      imputer:categorical_strategy, Value: 'most_frequent'
      imputer:numerical_strategy, Value: 'mean'
      lr_scheduler:ReduceLROnPlateau:factor, Value: 0.1
      lr_scheduler:ReduceLROnPlateau:mode, Value: 'min'
      lr_scheduler:ReduceLROnPlateau:patience, Value: 10
      lr_scheduler:__choice__, Value: 'ReduceLROnPlateau'
      network_backbone:ShapedMLPBackbone:activation, Value: 'relu'
      network_backbone:ShapedMLPBackbone:max_units, Value: 200
      network_backbone:ShapedMLPBackbone:mlp_shape, Value: 'funnel'
      network_backbone:ShapedMLPBackbone:num_groups, Value: 5
      network_backbone:ShapedMLPBackbone:output_dim, Value: 200
      network_backbone:ShapedMLPBackbone:use_dropout, Value: False
      network_backbone:__choice__, Value: 'ShapedMLPBackbone'
      network_embedding:__choice__, Value: 'NoEmbedding'
      network_head:__choice__, Value: 'fully_connected'
      network_head:fully_connected:activation, Value: 'relu'
      network_head:fully_connected:num_layers, Value: 2
      network_head:fully_connected:units_layer_1, Value: 128
      network_init:XavierInit:bias_strategy, Value: 'Normal'
      network_init:__choice__, Value: 'XavierInit'
      optimizer:AdamOptimizer:beta1, Value: 0.9
      optimizer:AdamOptimizer:beta2, Value: 0.9
      optimizer:AdamOptimizer:lr, Value: 0.01
      optimizer:AdamOptimizer:weight_decay, Value: 0.0
      optimizer:__choice__, Value: 'AdamOptimizer'
      scaler:__choice__, Value: 'StandardScaler'
      trainer:StandardTrainer:weighted_loss, Value: True
      trainer:__choice__, Value: 'StandardTrainer'
    , ta_runs=1, ta_time_used=4.671975135803223, wallclock_time=6.142251014709473, budget=5.555555555555555), TrajEntry(train_perf=0.16959064327485385, incumbent_id=2, incumbent=Configuration:
      data_loader:batch_size, Value: 241
      encoder:__choice__, Value: 'NoEncoder'
      feature_preprocessor:TruncatedSVD:target_dim, Value: 5
      feature_preprocessor:__choice__, Value: 'TruncatedSVD'
      imputer:categorical_strategy, Value: 'most_frequent'
      imputer:numerical_strategy, Value: 'median'
      lr_scheduler:CyclicLR:base_lr, Value: 0.004365630802173904
      lr_scheduler:CyclicLR:max_lr, Value: 0.0347450229935387
      lr_scheduler:CyclicLR:mode, Value: 'triangular2'
      lr_scheduler:CyclicLR:step_size_up, Value: 2743
      lr_scheduler:__choice__, Value: 'CyclicLR'
      network_backbone:ResNetBackbone:activation, Value: 'tanh'
      network_backbone:ResNetBackbone:blocks_per_group_0, Value: 4
      network_backbone:ResNetBackbone:blocks_per_group_1, Value: 1
      network_backbone:ResNetBackbone:blocks_per_group_2, Value: 3
      network_backbone:ResNetBackbone:blocks_per_group_3, Value: 1
      network_backbone:ResNetBackbone:blocks_per_group_4, Value: 3
      network_backbone:ResNetBackbone:blocks_per_group_5, Value: 2
      network_backbone:ResNetBackbone:dropout_0, Value: 0.48679317382467024
      network_backbone:ResNetBackbone:dropout_1, Value: 0.06477504180795529
      network_backbone:ResNetBackbone:dropout_2, Value: 0.16269419272183577
      network_backbone:ResNetBackbone:dropout_3, Value: 0.28583702231563873
      network_backbone:ResNetBackbone:dropout_4, Value: 0.06904550102468787
      network_backbone:ResNetBackbone:dropout_5, Value: 0.41007800289396423
      network_backbone:ResNetBackbone:num_groups, Value: 5
      network_backbone:ResNetBackbone:num_units_0, Value: 72
      network_backbone:ResNetBackbone:num_units_1, Value: 777
      network_backbone:ResNetBackbone:num_units_2, Value: 406
      network_backbone:ResNetBackbone:num_units_3, Value: 754
      network_backbone:ResNetBackbone:num_units_4, Value: 212
      network_backbone:ResNetBackbone:num_units_5, Value: 149
      network_backbone:ResNetBackbone:use_dropout, Value: True
      network_backbone:ResNetBackbone:use_shake_drop, Value: False
      network_backbone:ResNetBackbone:use_shake_shake, Value: False
      network_backbone:__choice__, Value: 'ResNetBackbone'
      network_embedding:__choice__, Value: 'NoEmbedding'
      network_head:__choice__, Value: 'fully_connected'
      network_head:fully_connected:activation, Value: 'sigmoid'
      network_head:fully_connected:num_layers, Value: 3
      network_head:fully_connected:units_layer_1, Value: 270
      network_head:fully_connected:units_layer_2, Value: 182
      network_init:KaimingInit:bias_strategy, Value: 'Zero'
      network_init:__choice__, Value: 'KaimingInit'
      optimizer:AdamOptimizer:beta1, Value: 0.9298665146853992
      optimizer:AdamOptimizer:beta2, Value: 0.9668863466906953
      optimizer:AdamOptimizer:lr, Value: 0.0004588426546598279
      optimizer:AdamOptimizer:weight_decay, Value: 0.0072105805563634
      optimizer:__choice__, Value: 'AdamOptimizer'
      scaler:__choice__, Value: 'MinMaxScaler'
      trainer:MixUpTrainer:alpha, Value: 0.12633514807988389
      trainer:MixUpTrainer:weighted_loss, Value: True
      trainer:__choice__, Value: 'MixUpTrainer'
    , ta_runs=17, ta_time_used=241.81850910186768, wallclock_time=288.531445980072, budget=50.0)]
    {'accuracy': 0.8670520231213873}
    |    | Preprocessing                                                 | Estimator                                                          |   Weight |
    |---:|:--------------------------------------------------------------|:-------------------------------------------------------------------|---------:|
    |  0 | None                                                          | CatBoostClassifier                                                 |     0.36 |
    |  1 | SimpleImputer,NoEncoder,NoScaler,KernelPCA                    | no embedding,ShapedMLPBackbone,FullyConnectedHead,nn.Sequential    |     0.16 |
    |  2 | None                                                          | ExtraTreesClassifier                                               |     0.14 |
    |  3 | SimpleImputer,NoEncoder,MinMaxScaler,TruncSVD                 | no embedding,ResNetBackbone,FullyConnectedHead,nn.Sequential       |     0.1  |
    |  4 | SimpleImputer,NoEncoder,MinMaxScaler,KernelPCA                | no embedding,ResNetBackbone,FullyConnectedHead,nn.Sequential       |     0.06 |
    |  5 | SimpleImputer,NoEncoder,MinMaxScaler,KernelPCA                | no embedding,ResNetBackbone,FullyConnectedHead,nn.Sequential       |     0.04 |
    |  6 | None                                                          | RFClassifier                                                       |     0.04 |
    |  7 | None                                                          | KNNClassifier                                                      |     0.04 |
    |  8 | SimpleImputer,NoEncoder,NoScaler,PolynomialFeatures           | no embedding,ShapedResNetBackbone,FullyConnectedHead,nn.Sequential |     0.02 |
    |  9 | SimpleImputer,NoEncoder,NoScaler,KitchenSink                  | no embedding,ResNetBackbone,FullyConnectedHead,nn.Sequential       |     0.02 |
    | 10 | SimpleImputer,NoEncoder,StandardScaler,NoFeaturePreprocessing | no embedding,ShapedMLPBackbone,FullyConnectedHead,nn.Sequential    |     0.02 |






|

.. code-block:: default

    import os
    import tempfile as tmp
    import warnings

    os.environ['JOBLIB_TEMP_FOLDER'] = tmp.gettempdir()
    os.environ['OMP_NUM_THREADS'] = '1'
    os.environ['OPENBLAS_NUM_THREADS'] = '1'
    os.environ['MKL_NUM_THREADS'] = '1'

    warnings.simplefilter(action='ignore', category=UserWarning)
    warnings.simplefilter(action='ignore', category=FutureWarning)

    import sklearn.datasets
    import sklearn.model_selection

    from autoPyTorch.api.tabular_classification import TabularClassificationTask
    from autoPyTorch.utils.hyperparameter_search_space_update import HyperparameterSearchSpaceUpdates


    def get_search_space_updates():
        """
        Search space updates to the task can be added using HyperparameterSearchSpaceUpdates
        Returns:
            HyperparameterSearchSpaceUpdates
        """
        updates = HyperparameterSearchSpaceUpdates()
        updates.append(node_name="data_loader",
                       hyperparameter="batch_size",
                       value_range=[16, 512],
                       default_value=32)
        updates.append(node_name="lr_scheduler",
                       hyperparameter="CosineAnnealingLR:T_max",
                       value_range=[50, 60],
                       default_value=55)
        updates.append(node_name='network_backbone',
                       hyperparameter='ResNetBackbone:dropout',
                       value_range=[0, 0.5],
                       default_value=0.2)
        return updates


    if __name__ == '__main__':

        ############################################################################
        # Data Loading
        # ============
        X, y = sklearn.datasets.fetch_openml(data_id=40981, return_X_y=True, as_frame=True)
        X_train, X_test, y_train, y_test = sklearn.model_selection.train_test_split(
            X,
            y,
            random_state=1,
        )

        ############################################################################
        # Build and fit a classifier with include components
        # ==================================================
        api = TabularClassificationTask(
            search_space_updates=get_search_space_updates(),
            include_components={'network_backbone': ['MLPBackbone', 'ResNetBackbone'],
                                'encoder': ['OneHotEncoder']}
        )

        ############################################################################
        # Search for an ensemble of machine learning algorithms
        # =====================================================
        api.search(
            X_train=X_train.copy(),
            y_train=y_train.copy(),
            X_test=X_test.copy(),
            y_test=y_test.copy(),
            optimize_metric='accuracy',
            total_walltime_limit=300,
            func_eval_time_limit_secs=50
        )

        ############################################################################
        # Print the final ensemble performance
        # ====================================
        print(api.run_history, api.trajectory)
        y_pred = api.predict(X_test)
        score = api.score(y_pred, y_test)
        print(score)
        print(api.show_models())

        ############################################################################
        # Build and fit a classifier with exclude components
        # ==================================================
        api = TabularClassificationTask(
            search_space_updates=get_search_space_updates(),
            exclude_components={'network_backbone': ['MLPBackbone'],
                                'encoder': ['OneHotEncoder']}
        )

        ############################################################################
        # Search for an ensemble of machine learning algorithms
        # =====================================================
        api.search(
            X_train=X_train,
            y_train=y_train,
            X_test=X_test.copy(),
            y_test=y_test.copy(),
            optimize_metric='accuracy',
            total_walltime_limit=300,
            func_eval_time_limit_secs=50
        )

        ############################################################################
        # Print the final ensemble performance
        # ====================================
        print(api.run_history, api.trajectory)
        y_pred = api.predict(X_test)
        score = api.score(y_pred, y_test)
        print(score)
        print(api.show_models())


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 11 minutes  48.556 seconds)


.. _sphx_glr_download_advanced_tabular_example_custom_configuration_space.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/automl/Auto-PyTorch/refactor_development?urlpath=lab/tree/notebooks/advanced_tabular/example_custom_configuration_space.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: example_custom_configuration_space.py <example_custom_configuration_space.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: example_custom_configuration_space.ipynb <example_custom_configuration_space.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_

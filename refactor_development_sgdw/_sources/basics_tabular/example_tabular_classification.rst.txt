
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "basics_tabular/example_tabular_classification.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_basics_tabular_example_tabular_classification.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_basics_tabular_example_tabular_classification.py:


======================
Tabular Classification
======================

The following example shows how to fit a sample classification model
with AutoPyTorch

.. GENERATED FROM PYTHON SOURCE LINES 9-72




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <smac.runhistory.runhistory.RunHistory object at 0x7fe7cf5436d0> [TrajEntry(train_perf=2147483648, incumbent_id=1, incumbent=Configuration:
      data_loader:batch_size, Value: 64
      encoder:__choice__, Value: 'OneHotEncoder'
      feature_preprocessor:__choice__, Value: 'NoFeaturePreprocessor'
      imputer:categorical_strategy, Value: 'most_frequent'
      imputer:numerical_strategy, Value: 'mean'
      lr_scheduler:ReduceLROnPlateau:factor, Value: 0.1
      lr_scheduler:ReduceLROnPlateau:mode, Value: 'min'
      lr_scheduler:ReduceLROnPlateau:patience, Value: 10
      lr_scheduler:__choice__, Value: 'ReduceLROnPlateau'
      network_backbone:ShapedMLPBackbone:activation, Value: 'relu'
      network_backbone:ShapedMLPBackbone:max_units, Value: 200
      network_backbone:ShapedMLPBackbone:mlp_shape, Value: 'funnel'
      network_backbone:ShapedMLPBackbone:num_groups, Value: 5
      network_backbone:ShapedMLPBackbone:output_dim, Value: 200
      network_backbone:ShapedMLPBackbone:use_dropout, Value: False
      network_backbone:__choice__, Value: 'ShapedMLPBackbone'
      network_embedding:LearnedEntityEmbedding:dimension_reduction_0, Value: 0.5
      network_embedding:LearnedEntityEmbedding:dimension_reduction_1, Value: 0.5
      network_embedding:LearnedEntityEmbedding:dimension_reduction_2, Value: 0.5
      network_embedding:LearnedEntityEmbedding:dimension_reduction_3, Value: 0.5
      network_embedding:LearnedEntityEmbedding:dimension_reduction_4, Value: 0.5
      network_embedding:LearnedEntityEmbedding:dimension_reduction_5, Value: 0.5
      network_embedding:LearnedEntityEmbedding:dimension_reduction_6, Value: 0.5
      network_embedding:LearnedEntityEmbedding:dimension_reduction_7, Value: 0.5
      network_embedding:LearnedEntityEmbedding:min_unique_values_for_embedding, Value: 5
      network_embedding:__choice__, Value: 'LearnedEntityEmbedding'
      network_head:__choice__, Value: 'fully_connected'
      network_head:fully_connected:activation, Value: 'relu'
      network_head:fully_connected:num_layers, Value: 2
      network_head:fully_connected:units_layer_1, Value: 128
      network_init:XavierInit:bias_strategy, Value: 'Normal'
      network_init:__choice__, Value: 'XavierInit'
      optimizer:AdamOptimizer:beta1, Value: 0.9
      optimizer:AdamOptimizer:beta2, Value: 0.9
      optimizer:AdamOptimizer:lr, Value: 0.01
      optimizer:AdamOptimizer:weight_decay, Value: 0.0
      optimizer:__choice__, Value: 'AdamOptimizer'
      scaler:__choice__, Value: 'StandardScaler'
      trainer:StandardTrainer:weighted_loss, Value: True
      trainer:__choice__, Value: 'StandardTrainer'
    , ta_runs=0, ta_time_used=0.0, wallclock_time=0.0019834041595458984, budget=0), TrajEntry(train_perf=0.15204678362573099, incumbent_id=1, incumbent=Configuration:
      data_loader:batch_size, Value: 64
      encoder:__choice__, Value: 'OneHotEncoder'
      feature_preprocessor:__choice__, Value: 'NoFeaturePreprocessor'
      imputer:categorical_strategy, Value: 'most_frequent'
      imputer:numerical_strategy, Value: 'mean'
      lr_scheduler:ReduceLROnPlateau:factor, Value: 0.1
      lr_scheduler:ReduceLROnPlateau:mode, Value: 'min'
      lr_scheduler:ReduceLROnPlateau:patience, Value: 10
      lr_scheduler:__choice__, Value: 'ReduceLROnPlateau'
      network_backbone:ShapedMLPBackbone:activation, Value: 'relu'
      network_backbone:ShapedMLPBackbone:max_units, Value: 200
      network_backbone:ShapedMLPBackbone:mlp_shape, Value: 'funnel'
      network_backbone:ShapedMLPBackbone:num_groups, Value: 5
      network_backbone:ShapedMLPBackbone:output_dim, Value: 200
      network_backbone:ShapedMLPBackbone:use_dropout, Value: False
      network_backbone:__choice__, Value: 'ShapedMLPBackbone'
      network_embedding:LearnedEntityEmbedding:dimension_reduction_0, Value: 0.5
      network_embedding:LearnedEntityEmbedding:dimension_reduction_1, Value: 0.5
      network_embedding:LearnedEntityEmbedding:dimension_reduction_2, Value: 0.5
      network_embedding:LearnedEntityEmbedding:dimension_reduction_3, Value: 0.5
      network_embedding:LearnedEntityEmbedding:dimension_reduction_4, Value: 0.5
      network_embedding:LearnedEntityEmbedding:dimension_reduction_5, Value: 0.5
      network_embedding:LearnedEntityEmbedding:dimension_reduction_6, Value: 0.5
      network_embedding:LearnedEntityEmbedding:dimension_reduction_7, Value: 0.5
      network_embedding:LearnedEntityEmbedding:min_unique_values_for_embedding, Value: 5
      network_embedding:__choice__, Value: 'LearnedEntityEmbedding'
      network_head:__choice__, Value: 'fully_connected'
      network_head:fully_connected:activation, Value: 'relu'
      network_head:fully_connected:num_layers, Value: 2
      network_head:fully_connected:units_layer_1, Value: 128
      network_init:XavierInit:bias_strategy, Value: 'Normal'
      network_init:__choice__, Value: 'XavierInit'
      optimizer:AdamOptimizer:beta1, Value: 0.9
      optimizer:AdamOptimizer:beta2, Value: 0.9
      optimizer:AdamOptimizer:lr, Value: 0.01
      optimizer:AdamOptimizer:weight_decay, Value: 0.0
      optimizer:__choice__, Value: 'AdamOptimizer'
      scaler:__choice__, Value: 'StandardScaler'
      trainer:StandardTrainer:weighted_loss, Value: True
      trainer:__choice__, Value: 'StandardTrainer'
    , ta_runs=1, ta_time_used=5.105776071548462, wallclock_time=6.720889568328857, budget=5.555555555555555), TrajEntry(train_perf=0.14619883040935677, incumbent_id=2, incumbent=Configuration:
      data_loader:batch_size, Value: 86
      encoder:__choice__, Value: 'OneHotEncoder'
      feature_preprocessor:Nystroem:gamma, Value: 3.091808554801575
      feature_preprocessor:Nystroem:kernel, Value: 'rbf'
      feature_preprocessor:Nystroem:n_components, Value: 3
      feature_preprocessor:__choice__, Value: 'Nystroem'
      imputer:categorical_strategy, Value: 'most_frequent'
      imputer:numerical_strategy, Value: 'constant_zero'
      lr_scheduler:CosineAnnealingWarmRestarts:T_0, Value: 8
      lr_scheduler:CosineAnnealingWarmRestarts:T_mult, Value: 1.865864244315463
      lr_scheduler:__choice__, Value: 'CosineAnnealingWarmRestarts'
      network_backbone:ShapedResNetBackbone:activation, Value: 'tanh'
      network_backbone:ShapedResNetBackbone:blocks_per_group, Value: 4
      network_backbone:ShapedResNetBackbone:max_shake_drop_probability, Value: 0.7974377977904101
      network_backbone:ShapedResNetBackbone:max_units, Value: 150
      network_backbone:ShapedResNetBackbone:num_groups, Value: 3
      network_backbone:ShapedResNetBackbone:output_dim, Value: 950
      network_backbone:ShapedResNetBackbone:resnet_shape, Value: 'triangle'
      network_backbone:ShapedResNetBackbone:use_dropout, Value: False
      network_backbone:ShapedResNetBackbone:use_shake_drop, Value: True
      network_backbone:ShapedResNetBackbone:use_shake_shake, Value: False
      network_backbone:__choice__, Value: 'ShapedResNetBackbone'
      network_embedding:__choice__, Value: 'NoEmbedding'
      network_head:__choice__, Value: 'fully_connected'
      network_head:fully_connected:activation, Value: 'relu'
      network_head:fully_connected:num_layers, Value: 4
      network_head:fully_connected:units_layer_1, Value: 380
      network_head:fully_connected:units_layer_2, Value: 126
      network_head:fully_connected:units_layer_3, Value: 291
      network_init:NoInit:bias_strategy, Value: 'Zero'
      network_init:__choice__, Value: 'NoInit'
      optimizer:AdamOptimizer:beta1, Value: 0.8718638773031361
      optimizer:AdamOptimizer:beta2, Value: 0.9283601082995857
      optimizer:AdamOptimizer:lr, Value: 0.02188969531944445
      optimizer:AdamOptimizer:weight_decay, Value: 0.01276597444696661
      optimizer:__choice__, Value: 'AdamOptimizer'
      scaler:__choice__, Value: 'MinMaxScaler'
      trainer:StandardTrainer:weighted_loss, Value: True
      trainer:__choice__, Value: 'StandardTrainer'
    , ta_runs=3, ta_time_used=20.08758854866028, wallclock_time=26.833664894104004, budget=5.555555555555555), TrajEntry(train_perf=0.1286549707602339, incumbent_id=3, incumbent=Configuration:
      data_loader:batch_size, Value: 64
      encoder:__choice__, Value: 'OneHotEncoder'
      feature_preprocessor:__choice__, Value: 'NoFeaturePreprocessor'
      imputer:categorical_strategy, Value: 'most_frequent'
      imputer:numerical_strategy, Value: 'mean'
      lr_scheduler:ReduceLROnPlateau:factor, Value: 0.1
      lr_scheduler:ReduceLROnPlateau:mode, Value: 'min'
      lr_scheduler:ReduceLROnPlateau:patience, Value: 10
      lr_scheduler:__choice__, Value: 'ReduceLROnPlateau'
      network_backbone:ShapedMLPBackbone:activation, Value: 'relu'
      network_backbone:ShapedMLPBackbone:max_units, Value: 200
      network_backbone:ShapedMLPBackbone:mlp_shape, Value: 'funnel'
      network_backbone:ShapedMLPBackbone:num_groups, Value: 5
      network_backbone:ShapedMLPBackbone:output_dim, Value: 200
      network_backbone:ShapedMLPBackbone:use_dropout, Value: False
      network_backbone:__choice__, Value: 'ShapedMLPBackbone'
      network_embedding:LearnedEntityEmbedding:dimension_reduction_0, Value: 0.5
      network_embedding:LearnedEntityEmbedding:dimension_reduction_1, Value: 0.5
      network_embedding:LearnedEntityEmbedding:dimension_reduction_2, Value: 0.5
      network_embedding:LearnedEntityEmbedding:dimension_reduction_3, Value: 0.5
      network_embedding:LearnedEntityEmbedding:dimension_reduction_4, Value: 0.5
      network_embedding:LearnedEntityEmbedding:dimension_reduction_5, Value: 0.5
      network_embedding:LearnedEntityEmbedding:dimension_reduction_6, Value: 0.5
      network_embedding:LearnedEntityEmbedding:dimension_reduction_7, Value: 0.5
      network_embedding:LearnedEntityEmbedding:min_unique_values_for_embedding, Value: 5
      network_embedding:__choice__, Value: 'LearnedEntityEmbedding'
      network_head:__choice__, Value: 'fully_connected'
      network_head:fully_connected:activation, Value: 'relu'
      network_head:fully_connected:num_layers, Value: 2
      network_head:fully_connected:units_layer_1, Value: 128
      network_init:XavierInit:bias_strategy, Value: 'Normal'
      network_init:__choice__, Value: 'XavierInit'
      optimizer:AdamOptimizer:beta1, Value: 0.9
      optimizer:AdamOptimizer:beta2, Value: 0.9
      optimizer:AdamOptimizer:lr, Value: 0.01
      optimizer:AdamOptimizer:weight_decay, Value: 0.0
      optimizer:__choice__, Value: 'AdamOptimizer'
      scaler:__choice__, Value: 'StandardScaler'
      trainer:StandardTrainer:weighted_loss, Value: True
      trainer:__choice__, Value: 'StandardTrainer'
    , ta_runs=11, ta_time_used=117.30856466293335, wallclock_time=144.03330159187317, budget=16.666666666666664)]
    {'accuracy': 0.8901734104046243}
    |    | Preprocessing                                                     | Estimator                                                          |   Weight |
    |---:|:------------------------------------------------------------------|:-------------------------------------------------------------------|---------:|
    |  0 | SimpleImputer,NoEncoder,NoScaler,TruncSVD                         | no embedding,ResNetBackbone,FullyConnectedHead,nn.Sequential       |     0.22 |
    |  1 | SimpleImputer,OneHotEncoder,MinMaxScaler,Nystroem                 | no embedding,ShapedResNetBackbone,FullyConnectedHead,nn.Sequential |     0.18 |
    |  2 | None                                                              | CatBoostClassifier                                                 |     0.14 |
    |  3 | SimpleImputer,OneHotEncoder,StandardScaler,NoFeaturePreprocessing | embedding,ShapedMLPBackbone,FullyConnectedHead,nn.Sequential       |     0.14 |
    |  4 | None                                                              | ExtraTreesClassifier                                               |     0.12 |
    |  5 | None                                                              | RFClassifier                                                       |     0.08 |
    |  6 | None                                                              | KNNClassifier                                                      |     0.04 |
    |  7 | SimpleImputer,OneHotEncoder,StandardScaler,NoFeaturePreprocessing | embedding,ShapedMLPBackbone,FullyConnectedHead,nn.Sequential       |     0.04 |
    |  8 | SimpleImputer,OneHotEncoder,StandardScaler,NoFeaturePreprocessing | embedding,ShapedMLPBackbone,FullyConnectedHead,nn.Sequential       |     0.04 |






|

.. code-block:: default

    import os
    import tempfile as tmp
    import warnings

    os.environ['JOBLIB_TEMP_FOLDER'] = tmp.gettempdir()
    os.environ['OMP_NUM_THREADS'] = '1'
    os.environ['OPENBLAS_NUM_THREADS'] = '1'
    os.environ['MKL_NUM_THREADS'] = '1'

    warnings.simplefilter(action='ignore', category=UserWarning)
    warnings.simplefilter(action='ignore', category=FutureWarning)

    import sklearn.datasets
    import sklearn.model_selection

    from autoPyTorch.api.tabular_classification import TabularClassificationTask


    if __name__ == '__main__':

        ############################################################################
        # Data Loading
        # ============
        X, y = sklearn.datasets.fetch_openml(data_id=40981, return_X_y=True, as_frame=True)
        X_train, X_test, y_train, y_test = sklearn.model_selection.train_test_split(
            X,
            y,
            random_state=1,
        )

        ############################################################################
        # Build and fit a classifier
        # ==========================
        api = TabularClassificationTask(
            temporary_directory='./tmp/autoPyTorch_example_tmp_01',
            output_directory='./tmp/autoPyTorch_example_out_01',
            # To maintain logs of the run, set the next two as False
            delete_tmp_folder_after_terminate=True,
            delete_output_folder_after_terminate=True
        )

        ############################################################################
        # Search for an ensemble of machine learning algorithms
        # =====================================================
        api.search(
            X_train=X_train,
            y_train=y_train,
            X_test=X_test.copy(),
            y_test=y_test.copy(),
            optimize_metric='accuracy',
            total_walltime_limit=300,
            func_eval_time_limit_secs=50
        )

        ############################################################################
        # Print the final ensemble performance
        # ====================================
        print(api.run_history, api.trajectory)
        y_pred = api.predict(X_test)
        score = api.score(y_pred, y_test)
        print(score)
        # Print the final ensemble built by AutoPyTorch
        print(api.show_models())


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 6 minutes  5.955 seconds)


.. _sphx_glr_download_basics_tabular_example_tabular_classification.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/automl/Auto-PyTorch/refactor_development?urlpath=lab/tree/notebooks/basics_tabular/example_tabular_classification.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: example_tabular_classification.py <example_tabular_classification.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: example_tabular_classification.ipynb <example_tabular_classification.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_

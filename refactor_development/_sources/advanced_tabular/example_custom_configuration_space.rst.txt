
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "advanced_tabular/example_custom_configuration_space.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_advanced_tabular_example_custom_configuration_space.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_advanced_tabular_example_custom_configuration_space.py:


======================
Tabular Classification with Custom Configuration Space
======================

The following example shows how adjust the configuration space of
the search. Currently, there are two changes that can be made to the space:-
1. Adjust individual hyperparameters in the pipeline
2. Include or exclude components:
    a) include: Dictionary containing components to include. Key is the node
                name and Value is an Iterable of the names of the components
                to include. Only these components will be present in the
                search space.
    b) exclude: Dictionary containing components to exclude. Key is the node
                name and Value is an Iterable of the names of the components
                to exclude. All except these components will be present in
                the search space.

.. GENERATED FROM PYTHON SOURCE LINES 19-133




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <smac.runhistory.runhistory.RunHistory object at 0x7f7490c77d60> [TrajEntry(train_perf=2147483648, incumbent_id=1, incumbent=Configuration:
      data_loader:batch_size, Value: 32
      encoder:__choice__, Value: 'OneHotEncoder'
      feature_preprocessor:__choice__, Value: 'NoFeaturePreprocessor'
      imputer:categorical_strategy, Value: 'most_frequent'
      imputer:numerical_strategy, Value: 'mean'
      lr_scheduler:ReduceLROnPlateau:factor, Value: 0.1
      lr_scheduler:ReduceLROnPlateau:mode, Value: 'min'
      lr_scheduler:ReduceLROnPlateau:patience, Value: 10
      lr_scheduler:__choice__, Value: 'ReduceLROnPlateau'
      network_backbone:MLPBackbone:activation, Value: 'relu'
      network_backbone:MLPBackbone:num_groups, Value: 5
      network_backbone:MLPBackbone:num_units_1, Value: 200
      network_backbone:MLPBackbone:num_units_2, Value: 200
      network_backbone:MLPBackbone:num_units_3, Value: 200
      network_backbone:MLPBackbone:num_units_4, Value: 200
      network_backbone:MLPBackbone:num_units_5, Value: 200
      network_backbone:MLPBackbone:use_dropout, Value: False
      network_backbone:__choice__, Value: 'MLPBackbone'
      network_embedding:__choice__, Value: 'NoEmbedding'
      network_head:__choice__, Value: 'fully_connected'
      network_head:fully_connected:activation, Value: 'relu'
      network_head:fully_connected:num_layers, Value: 2
      network_head:fully_connected:units_layer_1, Value: 128
      network_init:XavierInit:bias_strategy, Value: 'Normal'
      network_init:__choice__, Value: 'XavierInit'
      optimizer:AdamOptimizer:beta1, Value: 0.9
      optimizer:AdamOptimizer:beta2, Value: 0.9
      optimizer:AdamOptimizer:lr, Value: 0.01
      optimizer:AdamOptimizer:weight_decay, Value: 0.0
      optimizer:__choice__, Value: 'AdamOptimizer'
      scaler:__choice__, Value: 'StandardScaler'
      trainer:StandardTrainer:weighted_loss, Value: True
      trainer:__choice__, Value: 'StandardTrainer'
    , ta_runs=0, ta_time_used=0.0, wallclock_time=0.0017464160919189453, budget=0), TrajEntry(train_perf=0.1871345029239766, incumbent_id=1, incumbent=Configuration:
      data_loader:batch_size, Value: 32
      encoder:__choice__, Value: 'OneHotEncoder'
      feature_preprocessor:__choice__, Value: 'NoFeaturePreprocessor'
      imputer:categorical_strategy, Value: 'most_frequent'
      imputer:numerical_strategy, Value: 'mean'
      lr_scheduler:ReduceLROnPlateau:factor, Value: 0.1
      lr_scheduler:ReduceLROnPlateau:mode, Value: 'min'
      lr_scheduler:ReduceLROnPlateau:patience, Value: 10
      lr_scheduler:__choice__, Value: 'ReduceLROnPlateau'
      network_backbone:MLPBackbone:activation, Value: 'relu'
      network_backbone:MLPBackbone:num_groups, Value: 5
      network_backbone:MLPBackbone:num_units_1, Value: 200
      network_backbone:MLPBackbone:num_units_2, Value: 200
      network_backbone:MLPBackbone:num_units_3, Value: 200
      network_backbone:MLPBackbone:num_units_4, Value: 200
      network_backbone:MLPBackbone:num_units_5, Value: 200
      network_backbone:MLPBackbone:use_dropout, Value: False
      network_backbone:__choice__, Value: 'MLPBackbone'
      network_embedding:__choice__, Value: 'NoEmbedding'
      network_head:__choice__, Value: 'fully_connected'
      network_head:fully_connected:activation, Value: 'relu'
      network_head:fully_connected:num_layers, Value: 2
      network_head:fully_connected:units_layer_1, Value: 128
      network_init:XavierInit:bias_strategy, Value: 'Normal'
      network_init:__choice__, Value: 'XavierInit'
      optimizer:AdamOptimizer:beta1, Value: 0.9
      optimizer:AdamOptimizer:beta2, Value: 0.9
      optimizer:AdamOptimizer:lr, Value: 0.01
      optimizer:AdamOptimizer:weight_decay, Value: 0.0
      optimizer:__choice__, Value: 'AdamOptimizer'
      scaler:__choice__, Value: 'StandardScaler'
      trainer:StandardTrainer:weighted_loss, Value: True
      trainer:__choice__, Value: 'StandardTrainer'
    , ta_runs=1, ta_time_used=5.278185844421387, wallclock_time=6.803207874298096, budget=5.555555555555555), TrajEntry(train_perf=0.1578947368421053, incumbent_id=2, incumbent=Configuration:
      data_loader:batch_size, Value: 244
      encoder:__choice__, Value: 'OneHotEncoder'
      feature_preprocessor:KernelPCA:kernel, Value: 'cosine'
      feature_preprocessor:KernelPCA:n_components, Value: 4
      feature_preprocessor:__choice__, Value: 'KernelPCA'
      imputer:categorical_strategy, Value: 'constant_!missing!'
      imputer:numerical_strategy, Value: 'mean'
      lr_scheduler:ExponentialLR:gamma, Value: 0.722870178382194
      lr_scheduler:__choice__, Value: 'ExponentialLR'
      network_backbone:ResNetBackbone:activation, Value: 'tanh'
      network_backbone:ResNetBackbone:blocks_per_group_0, Value: 1
      network_backbone:ResNetBackbone:blocks_per_group_1, Value: 1
      network_backbone:ResNetBackbone:blocks_per_group_2, Value: 3
      network_backbone:ResNetBackbone:blocks_per_group_3, Value: 1
      network_backbone:ResNetBackbone:blocks_per_group_4, Value: 4
      network_backbone:ResNetBackbone:blocks_per_group_5, Value: 1
      network_backbone:ResNetBackbone:blocks_per_group_6, Value: 1
      network_backbone:ResNetBackbone:blocks_per_group_7, Value: 2
      network_backbone:ResNetBackbone:blocks_per_group_8, Value: 1
      network_backbone:ResNetBackbone:blocks_per_group_9, Value: 1
      network_backbone:ResNetBackbone:num_groups, Value: 9
      network_backbone:ResNetBackbone:num_units_0, Value: 905
      network_backbone:ResNetBackbone:num_units_1, Value: 521
      network_backbone:ResNetBackbone:num_units_2, Value: 534
      network_backbone:ResNetBackbone:num_units_3, Value: 589
      network_backbone:ResNetBackbone:num_units_4, Value: 732
      network_backbone:ResNetBackbone:num_units_5, Value: 170
      network_backbone:ResNetBackbone:num_units_6, Value: 871
      network_backbone:ResNetBackbone:num_units_7, Value: 667
      network_backbone:ResNetBackbone:num_units_8, Value: 243
      network_backbone:ResNetBackbone:num_units_9, Value: 62
      network_backbone:ResNetBackbone:use_dropout, Value: False
      network_backbone:ResNetBackbone:use_shake_drop, Value: False
      network_backbone:ResNetBackbone:use_shake_shake, Value: True
      network_backbone:__choice__, Value: 'ResNetBackbone'
      network_embedding:LearnedEntityEmbedding:dimension_reduction_0, Value: 0.7784688576020319
      network_embedding:LearnedEntityEmbedding:dimension_reduction_1, Value: 0.5030034817676233
      network_embedding:LearnedEntityEmbedding:dimension_reduction_2, Value: 0.027813285256666265
      network_embedding:LearnedEntityEmbedding:dimension_reduction_3, Value: 0.5731748608053316
      network_embedding:LearnedEntityEmbedding:dimension_reduction_4, Value: 0.6322678249068541
      network_embedding:LearnedEntityEmbedding:dimension_reduction_5, Value: 0.1682175017387918
      network_embedding:LearnedEntityEmbedding:dimension_reduction_6, Value: 0.5306872854406055
      network_embedding:LearnedEntityEmbedding:dimension_reduction_7, Value: 0.8180185500692995
      network_embedding:LearnedEntityEmbedding:min_unique_values_for_embedding, Value: 5
      network_embedding:__choice__, Value: 'LearnedEntityEmbedding'
      network_head:__choice__, Value: 'fully_connected'
      network_head:fully_connected:activation, Value: 'tanh'
      network_head:fully_connected:num_layers, Value: 2
      network_head:fully_connected:units_layer_1, Value: 469
      network_init:OrthogonalInit:bias_strategy, Value: 'Zero'
      network_init:__choice__, Value: 'OrthogonalInit'
      optimizer:AdamOptimizer:beta1, Value: 0.980530308576093
      optimizer:AdamOptimizer:beta2, Value: 0.9156768202247338
      optimizer:AdamOptimizer:lr, Value: 9.06686050852824e-05
      optimizer:AdamOptimizer:weight_decay, Value: 0.09923021776175428
      optimizer:__choice__, Value: 'AdamOptimizer'
      scaler:Normalizer:norm, Value: 'mean_abs'
      scaler:__choice__, Value: 'Normalizer'
      trainer:StandardTrainer:weighted_loss, Value: False
      trainer:__choice__, Value: 'StandardTrainer'
    , ta_runs=5, ta_time_used=66.79141545295715, wallclock_time=76.41487503051758, budget=5.555555555555555), TrajEntry(train_perf=0.14619883040935677, incumbent_id=3, incumbent=Configuration:
      data_loader:batch_size, Value: 32
      encoder:__choice__, Value: 'OneHotEncoder'
      feature_preprocessor:__choice__, Value: 'NoFeaturePreprocessor'
      imputer:categorical_strategy, Value: 'most_frequent'
      imputer:numerical_strategy, Value: 'mean'
      lr_scheduler:ReduceLROnPlateau:factor, Value: 0.1
      lr_scheduler:ReduceLROnPlateau:mode, Value: 'min'
      lr_scheduler:ReduceLROnPlateau:patience, Value: 10
      lr_scheduler:__choice__, Value: 'ReduceLROnPlateau'
      network_backbone:MLPBackbone:activation, Value: 'relu'
      network_backbone:MLPBackbone:num_groups, Value: 5
      network_backbone:MLPBackbone:num_units_1, Value: 200
      network_backbone:MLPBackbone:num_units_2, Value: 200
      network_backbone:MLPBackbone:num_units_3, Value: 200
      network_backbone:MLPBackbone:num_units_4, Value: 200
      network_backbone:MLPBackbone:num_units_5, Value: 200
      network_backbone:MLPBackbone:use_dropout, Value: False
      network_backbone:__choice__, Value: 'MLPBackbone'
      network_embedding:__choice__, Value: 'NoEmbedding'
      network_head:__choice__, Value: 'fully_connected'
      network_head:fully_connected:activation, Value: 'relu'
      network_head:fully_connected:num_layers, Value: 2
      network_head:fully_connected:units_layer_1, Value: 128
      network_init:XavierInit:bias_strategy, Value: 'Normal'
      network_init:__choice__, Value: 'XavierInit'
      optimizer:AdamOptimizer:beta1, Value: 0.9
      optimizer:AdamOptimizer:beta2, Value: 0.9
      optimizer:AdamOptimizer:lr, Value: 0.01
      optimizer:AdamOptimizer:weight_decay, Value: 0.0
      optimizer:__choice__, Value: 'AdamOptimizer'
      scaler:__choice__, Value: 'StandardScaler'
      trainer:StandardTrainer:weighted_loss, Value: True
      trainer:__choice__, Value: 'StandardTrainer'
    , ta_runs=11, ta_time_used=141.9829375743866, wallclock_time=165.48030829429626, budget=16.666666666666664)]
    {'accuracy': 0.8670520231213873}
    |    | Preprocessing                                                     | Estimator                                                 |   Weight |
    |---:|:------------------------------------------------------------------|:----------------------------------------------------------|---------:|
    |  0 | SimpleImputer,OneHotEncoder,Normalizer,KernelPCA                  | embedding,ResNetBackbone,FullyConnectedHead,nn.Sequential |     0.16 |
    |  1 | SimpleImputer,OneHotEncoder,Normalizer,KernelPCA                  | embedding,ResNetBackbone,FullyConnectedHead,nn.Sequential |     0.12 |
    |  2 | SimpleImputer,OneHotEncoder,Normalizer,NoFeaturePreprocessing     | embedding,MLPBackbone,FullyConnectedHead,nn.Sequential    |     0.12 |
    |  3 | None                                                              | CatBoostClassifier                                        |     0.12 |
    |  4 | None                                                              | ExtraTreesClassifier                                      |     0.12 |
    |  5 | SimpleImputer,OneHotEncoder,StandardScaler,NoFeaturePreprocessing | no embedding,MLPBackbone,FullyConnectedHead,nn.Sequential |     0.12 |
    |  6 | None                                                              | RFClassifier                                              |     0.1  |
    |  7 | None                                                              | KNNClassifier                                             |     0.06 |
    |  8 | SimpleImputer,OneHotEncoder,Normalizer,NoFeaturePreprocessing     | embedding,MLPBackbone,FullyConnectedHead,nn.Sequential    |     0.04 |
    |  9 | SimpleImputer,OneHotEncoder,StandardScaler,NoFeaturePreprocessing | no embedding,MLPBackbone,FullyConnectedHead,nn.Sequential |     0.04 |
    <smac.runhistory.runhistory.RunHistory object at 0x7f74746e6b80> [TrajEntry(train_perf=2147483648, incumbent_id=1, incumbent=Configuration:
      data_loader:batch_size, Value: 32
      encoder:__choice__, Value: 'NoEncoder'
      feature_preprocessor:__choice__, Value: 'NoFeaturePreprocessor'
      imputer:categorical_strategy, Value: 'most_frequent'
      imputer:numerical_strategy, Value: 'mean'
      lr_scheduler:ReduceLROnPlateau:factor, Value: 0.1
      lr_scheduler:ReduceLROnPlateau:mode, Value: 'min'
      lr_scheduler:ReduceLROnPlateau:patience, Value: 10
      lr_scheduler:__choice__, Value: 'ReduceLROnPlateau'
      network_backbone:ShapedMLPBackbone:activation, Value: 'relu'
      network_backbone:ShapedMLPBackbone:max_units, Value: 200
      network_backbone:ShapedMLPBackbone:mlp_shape, Value: 'funnel'
      network_backbone:ShapedMLPBackbone:num_groups, Value: 5
      network_backbone:ShapedMLPBackbone:output_dim, Value: 200
      network_backbone:ShapedMLPBackbone:use_dropout, Value: False
      network_backbone:__choice__, Value: 'ShapedMLPBackbone'
      network_embedding:__choice__, Value: 'NoEmbedding'
      network_head:__choice__, Value: 'fully_connected'
      network_head:fully_connected:activation, Value: 'relu'
      network_head:fully_connected:num_layers, Value: 2
      network_head:fully_connected:units_layer_1, Value: 128
      network_init:XavierInit:bias_strategy, Value: 'Normal'
      network_init:__choice__, Value: 'XavierInit'
      optimizer:AdamOptimizer:beta1, Value: 0.9
      optimizer:AdamOptimizer:beta2, Value: 0.9
      optimizer:AdamOptimizer:lr, Value: 0.01
      optimizer:AdamOptimizer:weight_decay, Value: 0.0
      optimizer:__choice__, Value: 'AdamOptimizer'
      scaler:__choice__, Value: 'StandardScaler'
      trainer:StandardTrainer:weighted_loss, Value: True
      trainer:__choice__, Value: 'StandardTrainer'
    , ta_runs=0, ta_time_used=0.0, wallclock_time=0.001886606216430664, budget=0), TrajEntry(train_perf=0.1871345029239766, incumbent_id=1, incumbent=Configuration:
      data_loader:batch_size, Value: 32
      encoder:__choice__, Value: 'NoEncoder'
      feature_preprocessor:__choice__, Value: 'NoFeaturePreprocessor'
      imputer:categorical_strategy, Value: 'most_frequent'
      imputer:numerical_strategy, Value: 'mean'
      lr_scheduler:ReduceLROnPlateau:factor, Value: 0.1
      lr_scheduler:ReduceLROnPlateau:mode, Value: 'min'
      lr_scheduler:ReduceLROnPlateau:patience, Value: 10
      lr_scheduler:__choice__, Value: 'ReduceLROnPlateau'
      network_backbone:ShapedMLPBackbone:activation, Value: 'relu'
      network_backbone:ShapedMLPBackbone:max_units, Value: 200
      network_backbone:ShapedMLPBackbone:mlp_shape, Value: 'funnel'
      network_backbone:ShapedMLPBackbone:num_groups, Value: 5
      network_backbone:ShapedMLPBackbone:output_dim, Value: 200
      network_backbone:ShapedMLPBackbone:use_dropout, Value: False
      network_backbone:__choice__, Value: 'ShapedMLPBackbone'
      network_embedding:__choice__, Value: 'NoEmbedding'
      network_head:__choice__, Value: 'fully_connected'
      network_head:fully_connected:activation, Value: 'relu'
      network_head:fully_connected:num_layers, Value: 2
      network_head:fully_connected:units_layer_1, Value: 128
      network_init:XavierInit:bias_strategy, Value: 'Normal'
      network_init:__choice__, Value: 'XavierInit'
      optimizer:AdamOptimizer:beta1, Value: 0.9
      optimizer:AdamOptimizer:beta2, Value: 0.9
      optimizer:AdamOptimizer:lr, Value: 0.01
      optimizer:AdamOptimizer:weight_decay, Value: 0.0
      optimizer:__choice__, Value: 'AdamOptimizer'
      scaler:__choice__, Value: 'StandardScaler'
      trainer:StandardTrainer:weighted_loss, Value: True
      trainer:__choice__, Value: 'StandardTrainer'
    , ta_runs=1, ta_time_used=4.113864421844482, wallclock_time=5.50607442855835, budget=5.555555555555555)]
    {'accuracy': 0.8670520231213873}
    |    | Preprocessing                                                 | Estimator                                                       |   Weight |
    |---:|:--------------------------------------------------------------|:----------------------------------------------------------------|---------:|
    |  0 | None                                                          | CatBoostClassifier                                              |     0.3  |
    |  1 | None                                                          | RFClassifier                                                    |     0.3  |
    |  2 | None                                                          | ExtraTreesClassifier                                            |     0.18 |
    |  3 | None                                                          | KNNClassifier                                                   |     0.12 |
    |  4 | None                                                          | LGBMClassifier                                                  |     0.04 |
    |  5 | None                                                          | SVC                                                             |     0.02 |
    |  6 | SimpleImputer,NoEncoder,StandardScaler,NoFeaturePreprocessing | no embedding,ShapedMLPBackbone,FullyConnectedHead,nn.Sequential |     0.02 |
    |  7 | SimpleImputer,NoEncoder,StandardScaler,NoFeaturePreprocessing | no embedding,ShapedMLPBackbone,FullyConnectedHead,nn.Sequential |     0.02 |






|

.. code-block:: default

    import os
    import tempfile as tmp
    import warnings

    os.environ['JOBLIB_TEMP_FOLDER'] = tmp.gettempdir()
    os.environ['OMP_NUM_THREADS'] = '1'
    os.environ['OPENBLAS_NUM_THREADS'] = '1'
    os.environ['MKL_NUM_THREADS'] = '1'

    warnings.simplefilter(action='ignore', category=UserWarning)
    warnings.simplefilter(action='ignore', category=FutureWarning)

    import sklearn.datasets
    import sklearn.model_selection

    from autoPyTorch.api.tabular_classification import TabularClassificationTask
    from autoPyTorch.utils.hyperparameter_search_space_update import HyperparameterSearchSpaceUpdates


    def get_search_space_updates():
        """
        Search space updates to the task can be added using HyperparameterSearchSpaceUpdates
        Returns:
            HyperparameterSearchSpaceUpdates
        """
        updates = HyperparameterSearchSpaceUpdates()
        updates.append(node_name="data_loader",
                       hyperparameter="batch_size",
                       value_range=[16, 512],
                       default_value=32)
        updates.append(node_name="lr_scheduler",
                       hyperparameter="CosineAnnealingLR:T_max",
                       value_range=[50, 60],
                       default_value=55)
        updates.append(node_name='network_backbone',
                       hyperparameter='ResNetBackbone:dropout',
                       value_range=[0, 0.5],
                       default_value=0.2)
        return updates


    if __name__ == '__main__':

        ############################################################################
        # Data Loading
        # ============
        X, y = sklearn.datasets.fetch_openml(data_id=40981, return_X_y=True, as_frame=True)
        X_train, X_test, y_train, y_test = sklearn.model_selection.train_test_split(
            X,
            y,
            random_state=1,
        )

        ############################################################################
        # Build and fit a classifier with include components
        # ==================================================
        api = TabularClassificationTask(
            search_space_updates=get_search_space_updates(),
            include_components={'network_backbone': ['MLPBackbone', 'ResNetBackbone'],
                                'encoder': ['OneHotEncoder']}
        )

        ############################################################################
        # Search for an ensemble of machine learning algorithms
        # =====================================================
        api.search(
            X_train=X_train.copy(),
            y_train=y_train.copy(),
            X_test=X_test.copy(),
            y_test=y_test.copy(),
            optimize_metric='accuracy',
            total_walltime_limit=300,
            func_eval_time_limit_secs=50
        )

        ############################################################################
        # Print the final ensemble performance
        # ====================================
        print(api.run_history, api.trajectory)
        y_pred = api.predict(X_test)
        score = api.score(y_pred, y_test)
        print(score)
        print(api.show_models())

        ############################################################################
        # Build and fit a classifier with exclude components
        # ==================================================
        api = TabularClassificationTask(
            search_space_updates=get_search_space_updates(),
            exclude_components={'network_backbone': ['MLPBackbone'],
                                'encoder': ['OneHotEncoder']}
        )

        ############################################################################
        # Search for an ensemble of machine learning algorithms
        # =====================================================
        api.search(
            X_train=X_train,
            y_train=y_train,
            X_test=X_test.copy(),
            y_test=y_test.copy(),
            optimize_metric='accuracy',
            total_walltime_limit=300,
            func_eval_time_limit_secs=50
        )

        ############################################################################
        # Print the final ensemble performance
        # ====================================
        print(api.run_history, api.trajectory)
        y_pred = api.predict(X_test)
        score = api.score(y_pred, y_test)
        print(score)
        print(api.show_models())


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 11 minutes  43.290 seconds)


.. _sphx_glr_download_advanced_tabular_example_custom_configuration_space.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/automl/Auto-PyTorch/refactor_development?urlpath=lab/tree/notebooks/advanced_tabular/example_custom_configuration_space.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: example_custom_configuration_space.py <example_custom_configuration_space.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: example_custom_configuration_space.ipynb <example_custom_configuration_space.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_

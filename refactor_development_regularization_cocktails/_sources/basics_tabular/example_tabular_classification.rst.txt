
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "basics_tabular/example_tabular_classification.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_basics_tabular_example_tabular_classification.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_basics_tabular_example_tabular_classification.py:


======================
Tabular Classification
======================

The following example shows how to fit a sample classification model
with AutoPyTorch

.. GENERATED FROM PYTHON SOURCE LINES 9-72




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <smac.runhistory.runhistory.RunHistory object at 0x7f9ce471fd30> [TrajEntry(train_perf=2147483648, incumbent_id=1, incumbent=Configuration:
      data_loader:batch_size, Value: 64
      encoder:__choice__, Value: 'OneHotEncoder'
      feature_preprocessor:__choice__, Value: 'NoFeaturePreprocessor'
      imputer:categorical_strategy, Value: 'most_frequent'
      imputer:numerical_strategy, Value: 'mean'
      lr_scheduler:ReduceLROnPlateau:factor, Value: 0.1
      lr_scheduler:ReduceLROnPlateau:mode, Value: 'min'
      lr_scheduler:ReduceLROnPlateau:patience, Value: 10
      lr_scheduler:__choice__, Value: 'ReduceLROnPlateau'
      network_backbone:ShapedMLPBackbone:activation, Value: 'relu'
      network_backbone:ShapedMLPBackbone:max_units, Value: 200
      network_backbone:ShapedMLPBackbone:mlp_shape, Value: 'funnel'
      network_backbone:ShapedMLPBackbone:num_groups, Value: 5
      network_backbone:ShapedMLPBackbone:output_dim, Value: 200
      network_backbone:ShapedMLPBackbone:use_dropout, Value: False
      network_backbone:__choice__, Value: 'ShapedMLPBackbone'
      network_embedding:__choice__, Value: 'NoEmbedding'
      network_head:__choice__, Value: 'fully_connected'
      network_head:fully_connected:activation, Value: 'relu'
      network_head:fully_connected:num_layers, Value: 2
      network_head:fully_connected:units_layer_1, Value: 128
      network_init:XavierInit:bias_strategy, Value: 'Normal'
      network_init:__choice__, Value: 'XavierInit'
      optimizer:AdamOptimizer:beta1, Value: 0.9
      optimizer:AdamOptimizer:beta2, Value: 0.9
      optimizer:AdamOptimizer:lr, Value: 0.01
      optimizer:AdamOptimizer:use_weight_decay, Value: True
      optimizer:AdamOptimizer:weight_decay, Value: 0.0001
      optimizer:__choice__, Value: 'AdamOptimizer'
      scaler:__choice__, Value: 'StandardScaler'
      trainer:StandardTrainer:Lookahead:la_alpha, Value: 0.6
      trainer:StandardTrainer:Lookahead:la_steps, Value: 6
      trainer:StandardTrainer:se_lastk, Constant: 3
      trainer:StandardTrainer:use_lookahead_optimizer, Value: True
      trainer:StandardTrainer:use_snapshot_ensemble, Value: True
      trainer:StandardTrainer:use_stochastic_weight_averaging, Value: True
      trainer:StandardTrainer:weighted_loss, Value: True
      trainer:__choice__, Value: 'StandardTrainer'
    , ta_runs=0, ta_time_used=0.0, wallclock_time=0.0018024444580078125, budget=0), TrajEntry(train_perf=1.0, incumbent_id=1, incumbent=Configuration:
      data_loader:batch_size, Value: 64
      encoder:__choice__, Value: 'OneHotEncoder'
      feature_preprocessor:__choice__, Value: 'NoFeaturePreprocessor'
      imputer:categorical_strategy, Value: 'most_frequent'
      imputer:numerical_strategy, Value: 'mean'
      lr_scheduler:ReduceLROnPlateau:factor, Value: 0.1
      lr_scheduler:ReduceLROnPlateau:mode, Value: 'min'
      lr_scheduler:ReduceLROnPlateau:patience, Value: 10
      lr_scheduler:__choice__, Value: 'ReduceLROnPlateau'
      network_backbone:ShapedMLPBackbone:activation, Value: 'relu'
      network_backbone:ShapedMLPBackbone:max_units, Value: 200
      network_backbone:ShapedMLPBackbone:mlp_shape, Value: 'funnel'
      network_backbone:ShapedMLPBackbone:num_groups, Value: 5
      network_backbone:ShapedMLPBackbone:output_dim, Value: 200
      network_backbone:ShapedMLPBackbone:use_dropout, Value: False
      network_backbone:__choice__, Value: 'ShapedMLPBackbone'
      network_embedding:__choice__, Value: 'NoEmbedding'
      network_head:__choice__, Value: 'fully_connected'
      network_head:fully_connected:activation, Value: 'relu'
      network_head:fully_connected:num_layers, Value: 2
      network_head:fully_connected:units_layer_1, Value: 128
      network_init:XavierInit:bias_strategy, Value: 'Normal'
      network_init:__choice__, Value: 'XavierInit'
      optimizer:AdamOptimizer:beta1, Value: 0.9
      optimizer:AdamOptimizer:beta2, Value: 0.9
      optimizer:AdamOptimizer:lr, Value: 0.01
      optimizer:AdamOptimizer:use_weight_decay, Value: True
      optimizer:AdamOptimizer:weight_decay, Value: 0.0001
      optimizer:__choice__, Value: 'AdamOptimizer'
      scaler:__choice__, Value: 'StandardScaler'
      trainer:StandardTrainer:Lookahead:la_alpha, Value: 0.6
      trainer:StandardTrainer:Lookahead:la_steps, Value: 6
      trainer:StandardTrainer:se_lastk, Constant: 3
      trainer:StandardTrainer:use_lookahead_optimizer, Value: True
      trainer:StandardTrainer:use_snapshot_ensemble, Value: True
      trainer:StandardTrainer:use_stochastic_weight_averaging, Value: True
      trainer:StandardTrainer:weighted_loss, Value: True
      trainer:__choice__, Value: 'StandardTrainer'
    , ta_runs=1, ta_time_used=2.8527472019195557, wallclock_time=3.2592594623565674, budget=5.555555555555555), TrajEntry(train_perf=1.0, incumbent_id=2, incumbent=Configuration:
      data_loader:batch_size, Value: 52
      encoder:__choice__, Value: 'NoEncoder'
      feature_preprocessor:TruncatedSVD:target_dim, Value: 5
      feature_preprocessor:__choice__, Value: 'TruncatedSVD'
      imputer:categorical_strategy, Value: 'constant_!missing!'
      imputer:numerical_strategy, Value: 'constant_zero'
      lr_scheduler:CyclicLR:base_lr, Value: 0.08147721073217
      lr_scheduler:CyclicLR:max_lr, Value: 0.05274676961864347
      lr_scheduler:CyclicLR:mode, Value: 'triangular'
      lr_scheduler:CyclicLR:step_size_up, Value: 3039
      lr_scheduler:__choice__, Value: 'CyclicLR'
      network_backbone:ShapedMLPBackbone:activation, Value: 'tanh'
      network_backbone:ShapedMLPBackbone:max_units, Value: 15
      network_backbone:ShapedMLPBackbone:mlp_shape, Value: 'diamond'
      network_backbone:ShapedMLPBackbone:num_groups, Value: 8
      network_backbone:ShapedMLPBackbone:output_dim, Value: 815
      network_backbone:ShapedMLPBackbone:use_dropout, Value: False
      network_backbone:__choice__, Value: 'ShapedMLPBackbone'
      network_embedding:__choice__, Value: 'NoEmbedding'
      network_head:__choice__, Value: 'fully_connected'
      network_head:fully_connected:activation, Value: 'relu'
      network_head:fully_connected:num_layers, Value: 4
      network_head:fully_connected:units_layer_1, Value: 427
      network_head:fully_connected:units_layer_2, Value: 446
      network_head:fully_connected:units_layer_3, Value: 230
      network_init:OrthogonalInit:bias_strategy, Value: 'Zero'
      network_init:__choice__, Value: 'OrthogonalInit'
      optimizer:RMSpropOptimizer:alpha, Value: 0.19997244568415756
      optimizer:RMSpropOptimizer:lr, Value: 6.191800932663027e-05
      optimizer:RMSpropOptimizer:momentum, Value: 0.06433450894710158
      optimizer:RMSpropOptimizer:use_weight_decay, Value: True
      optimizer:RMSpropOptimizer:weight_decay, Value: 0.031057305202585754
      optimizer:__choice__, Value: 'RMSpropOptimizer'
      scaler:Normalizer:norm, Value: 'mean_squared'
      scaler:__choice__, Value: 'Normalizer'
      trainer:MixUpTrainer:alpha, Value: 0.46153000680698253
      trainer:MixUpTrainer:se_lastk, Constant: 3
      trainer:MixUpTrainer:use_lookahead_optimizer, Value: False
      trainer:MixUpTrainer:use_snapshot_ensemble, Value: True
      trainer:MixUpTrainer:use_stochastic_weight_averaging, Value: True
      trainer:MixUpTrainer:weighted_loss, Value: True
      trainer:__choice__, Value: 'MixUpTrainer'
    , ta_runs=10, ta_time_used=32.98463702201843, wallclock_time=48.06534266471863, budget=16.666666666666664), TrajEntry(train_perf=1.0, incumbent_id=3, incumbent=Configuration:
      data_loader:batch_size, Value: 41
      encoder:__choice__, Value: 'OneHotEncoder'
      feature_preprocessor:KernelPCA:coef0, Value: 0.47591146237464943
      feature_preprocessor:KernelPCA:kernel, Value: 'sigmoid'
      feature_preprocessor:KernelPCA:n_components, Value: 6
      feature_preprocessor:__choice__, Value: 'KernelPCA'
      imputer:categorical_strategy, Value: 'most_frequent'
      imputer:numerical_strategy, Value: 'mean'
      lr_scheduler:CosineAnnealingLR:T_max, Value: 83
      lr_scheduler:__choice__, Value: 'CosineAnnealingLR'
      network_backbone:MLPBackbone:activation, Value: 'relu'
      network_backbone:MLPBackbone:dropout_1, Value: 0.4185051574953813
      network_backbone:MLPBackbone:dropout_2, Value: 0.5656188594442096
      network_backbone:MLPBackbone:dropout_3, Value: 0.40761102144106004
      network_backbone:MLPBackbone:dropout_4, Value: 0.09885517732322456
      network_backbone:MLPBackbone:dropout_5, Value: 0.0037297343791316885
      network_backbone:MLPBackbone:dropout_6, Value: 0.6495293298968049
      network_backbone:MLPBackbone:num_groups, Value: 6
      network_backbone:MLPBackbone:num_units_1, Value: 216
      network_backbone:MLPBackbone:num_units_2, Value: 15
      network_backbone:MLPBackbone:num_units_3, Value: 481
      network_backbone:MLPBackbone:num_units_4, Value: 695
      network_backbone:MLPBackbone:num_units_5, Value: 66
      network_backbone:MLPBackbone:num_units_6, Value: 229
      network_backbone:MLPBackbone:use_dropout, Value: True
      network_backbone:__choice__, Value: 'MLPBackbone'
      network_embedding:LearnedEntityEmbedding:dimension_reduction_0, Value: 0.7151145407044662
      network_embedding:LearnedEntityEmbedding:dimension_reduction_1, Value: 0.4623744893212508
      network_embedding:LearnedEntityEmbedding:dimension_reduction_2, Value: 0.06029022696580921
      network_embedding:LearnedEntityEmbedding:dimension_reduction_3, Value: 0.9282827370800026
      network_embedding:LearnedEntityEmbedding:dimension_reduction_4, Value: 0.7892658566034837
      network_embedding:LearnedEntityEmbedding:dimension_reduction_5, Value: 0.27412827660810735
      network_embedding:LearnedEntityEmbedding:dimension_reduction_6, Value: 0.7811947025756869
      network_embedding:LearnedEntityEmbedding:dimension_reduction_7, Value: 0.9582534001054787
      network_embedding:LearnedEntityEmbedding:min_unique_values_for_embedding, Value: 5
      network_embedding:__choice__, Value: 'LearnedEntityEmbedding'
      network_head:__choice__, Value: 'fully_connected'
      network_head:fully_connected:activation, Value: 'tanh'
      network_head:fully_connected:num_layers, Value: 4
      network_head:fully_connected:units_layer_1, Value: 250
      network_head:fully_connected:units_layer_2, Value: 231
      network_head:fully_connected:units_layer_3, Value: 85
      network_init:NoInit:bias_strategy, Value: 'Normal'
      network_init:__choice__, Value: 'NoInit'
      optimizer:AdamOptimizer:beta1, Value: 0.8506762861141025
      optimizer:AdamOptimizer:beta2, Value: 0.9652863284569373
      optimizer:AdamOptimizer:lr, Value: 0.00044805014670340384
      optimizer:AdamOptimizer:use_weight_decay, Value: True
      optimizer:AdamOptimizer:weight_decay, Value: 3.129558469793676e-07
      optimizer:__choice__, Value: 'AdamOptimizer'
      scaler:Normalizer:norm, Value: 'max'
      scaler:__choice__, Value: 'Normalizer'
      trainer:AdversarialTrainer:epsilon, Value: 0.1147393734468055
      trainer:AdversarialTrainer:use_lookahead_optimizer, Value: False
      trainer:AdversarialTrainer:use_snapshot_ensemble, Value: False
      trainer:AdversarialTrainer:use_stochastic_weight_averaging, Value: False
      trainer:AdversarialTrainer:weighted_loss, Value: True
      trainer:__choice__, Value: 'AdversarialTrainer'
    , ta_runs=13, ta_time_used=45.82523322105408, wallclock_time=75.90046691894531, budget=50.0)]
    {'accuracy': 0.8670520231213873}
    |    | Preprocessing   | Estimator            |   Weight |
    |---:|:----------------|:---------------------|---------:|
    |  0 | None            | ExtraTreesClassifier |     0.3  |
    |  1 | None            | CatBoostClassifier   |     0.24 |
    |  2 | None            | RFClassifier         |     0.16 |
    |  3 | None            | KNNClassifier        |     0.16 |
    |  4 | None            | LGBMClassifier       |     0.1  |
    |  5 | None            | SVC                  |     0.04 |






|

.. code-block:: default

    import os
    import tempfile as tmp
    import warnings

    os.environ['JOBLIB_TEMP_FOLDER'] = tmp.gettempdir()
    os.environ['OMP_NUM_THREADS'] = '1'
    os.environ['OPENBLAS_NUM_THREADS'] = '1'
    os.environ['MKL_NUM_THREADS'] = '1'

    warnings.simplefilter(action='ignore', category=UserWarning)
    warnings.simplefilter(action='ignore', category=FutureWarning)

    import sklearn.datasets
    import sklearn.model_selection

    from autoPyTorch.api.tabular_classification import TabularClassificationTask


    if __name__ == '__main__':

        ############################################################################
        # Data Loading
        # ============
        X, y = sklearn.datasets.fetch_openml(data_id=40981, return_X_y=True, as_frame=True)
        X_train, X_test, y_train, y_test = sklearn.model_selection.train_test_split(
            X,
            y,
            random_state=1,
        )

        ############################################################################
        # Build and fit a classifier
        # ==========================
        api = TabularClassificationTask(
            temporary_directory='./tmp/autoPyTorch_example_tmp_01',
            output_directory='./tmp/autoPyTorch_example_out_01',
            # To maintain logs of the run, set the next two as False
            delete_tmp_folder_after_terminate=True,
            delete_output_folder_after_terminate=True
        )

        ############################################################################
        # Search for an ensemble of machine learning algorithms
        # =====================================================
        api.search(
            X_train=X_train,
            y_train=y_train,
            X_test=X_test.copy(),
            y_test=y_test.copy(),
            optimize_metric='accuracy',
            total_walltime_limit=300,
            func_eval_time_limit_secs=50
        )

        ############################################################################
        # Print the final ensemble performance
        # ====================================
        print(api.run_history, api.trajectory)
        y_pred = api.predict(X_test)
        score = api.score(y_pred, y_test)
        print(score)
        # Print the final ensemble built by AutoPyTorch
        print(api.show_models())


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 5 minutes  52.094 seconds)


.. _sphx_glr_download_basics_tabular_example_tabular_classification.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/automl/Auto-PyTorch/refactor_development?urlpath=lab/tree/notebooks/basics_tabular/example_tabular_classification.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: example_tabular_classification.py <example_tabular_classification.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: example_tabular_classification.ipynb <example_tabular_classification.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_


.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "advanced_tabular/example_custom_configuration_space.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_advanced_tabular_example_custom_configuration_space.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_advanced_tabular_example_custom_configuration_space.py:


======================
Tabular Classification with Custom Configuration Space
======================

The following example shows how adjust the configuration space of
the search. Currently, there are two changes that can be made to the space:-
1. Adjust individual hyperparameters in the pipeline
2. Include or exclude components:
    a) include: Dictionary containing components to include. Key is the node
                name and Value is an Iterable of the names of the components
                to include. Only these components will be present in the
                search space.
    b) exclude: Dictionary containing components to exclude. Key is the node
                name and Value is an Iterable of the names of the components
                to exclude. All except these components will be present in
                the search space.

.. GENERATED FROM PYTHON SOURCE LINES 19-133




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <smac.runhistory.runhistory.RunHistory object at 0x7f337f2b98b0> [TrajEntry(train_perf=2147483648, incumbent_id=1, incumbent=Configuration:
      data_loader:batch_size, Value: 32
      encoder:__choice__, Value: 'OneHotEncoder'
      feature_preprocessor:__choice__, Value: 'NoFeaturePreprocessor'
      imputer:categorical_strategy, Value: 'most_frequent'
      imputer:numerical_strategy, Value: 'mean'
      lr_scheduler:ReduceLROnPlateau:factor, Value: 0.1
      lr_scheduler:ReduceLROnPlateau:mode, Value: 'min'
      lr_scheduler:ReduceLROnPlateau:patience, Value: 10
      lr_scheduler:__choice__, Value: 'ReduceLROnPlateau'
      network_backbone:MLPBackbone:activation, Value: 'relu'
      network_backbone:MLPBackbone:num_groups, Value: 5
      network_backbone:MLPBackbone:num_units_1, Value: 200
      network_backbone:MLPBackbone:num_units_2, Value: 200
      network_backbone:MLPBackbone:num_units_3, Value: 200
      network_backbone:MLPBackbone:num_units_4, Value: 200
      network_backbone:MLPBackbone:num_units_5, Value: 200
      network_backbone:MLPBackbone:use_dropout, Value: False
      network_backbone:__choice__, Value: 'MLPBackbone'
      network_embedding:__choice__, Value: 'NoEmbedding'
      network_head:__choice__, Value: 'fully_connected'
      network_head:fully_connected:activation, Value: 'relu'
      network_head:fully_connected:num_layers, Value: 2
      network_head:fully_connected:units_layer_1, Value: 128
      network_init:XavierInit:bias_strategy, Value: 'Normal'
      network_init:__choice__, Value: 'XavierInit'
      optimizer:AdamOptimizer:beta1, Value: 0.9
      optimizer:AdamOptimizer:beta2, Value: 0.9
      optimizer:AdamOptimizer:lr, Value: 0.01
      optimizer:AdamOptimizer:use_weight_decay, Value: True
      optimizer:AdamOptimizer:weight_decay, Value: 0.0001
      optimizer:__choice__, Value: 'AdamOptimizer'
      scaler:__choice__, Value: 'StandardScaler'
      trainer:StandardTrainer:Lookahead:la_alpha, Value: 0.6
      trainer:StandardTrainer:Lookahead:la_steps, Value: 6
      trainer:StandardTrainer:se_lastk, Constant: 3
      trainer:StandardTrainer:use_lookahead_optimizer, Value: True
      trainer:StandardTrainer:use_snapshot_ensemble, Value: True
      trainer:StandardTrainer:use_stochastic_weight_averaging, Value: True
      trainer:StandardTrainer:weighted_loss, Value: True
      trainer:__choice__, Value: 'StandardTrainer'
    , ta_runs=0, ta_time_used=0.0, wallclock_time=0.002155780792236328, budget=0), TrajEntry(train_perf=0.16374269005847952, incumbent_id=1, incumbent=Configuration:
      data_loader:batch_size, Value: 32
      encoder:__choice__, Value: 'OneHotEncoder'
      feature_preprocessor:__choice__, Value: 'NoFeaturePreprocessor'
      imputer:categorical_strategy, Value: 'most_frequent'
      imputer:numerical_strategy, Value: 'mean'
      lr_scheduler:ReduceLROnPlateau:factor, Value: 0.1
      lr_scheduler:ReduceLROnPlateau:mode, Value: 'min'
      lr_scheduler:ReduceLROnPlateau:patience, Value: 10
      lr_scheduler:__choice__, Value: 'ReduceLROnPlateau'
      network_backbone:MLPBackbone:activation, Value: 'relu'
      network_backbone:MLPBackbone:num_groups, Value: 5
      network_backbone:MLPBackbone:num_units_1, Value: 200
      network_backbone:MLPBackbone:num_units_2, Value: 200
      network_backbone:MLPBackbone:num_units_3, Value: 200
      network_backbone:MLPBackbone:num_units_4, Value: 200
      network_backbone:MLPBackbone:num_units_5, Value: 200
      network_backbone:MLPBackbone:use_dropout, Value: False
      network_backbone:__choice__, Value: 'MLPBackbone'
      network_embedding:__choice__, Value: 'NoEmbedding'
      network_head:__choice__, Value: 'fully_connected'
      network_head:fully_connected:activation, Value: 'relu'
      network_head:fully_connected:num_layers, Value: 2
      network_head:fully_connected:units_layer_1, Value: 128
      network_init:XavierInit:bias_strategy, Value: 'Normal'
      network_init:__choice__, Value: 'XavierInit'
      optimizer:AdamOptimizer:beta1, Value: 0.9
      optimizer:AdamOptimizer:beta2, Value: 0.9
      optimizer:AdamOptimizer:lr, Value: 0.01
      optimizer:AdamOptimizer:use_weight_decay, Value: True
      optimizer:AdamOptimizer:weight_decay, Value: 0.0001
      optimizer:__choice__, Value: 'AdamOptimizer'
      scaler:__choice__, Value: 'StandardScaler'
      trainer:StandardTrainer:Lookahead:la_alpha, Value: 0.6
      trainer:StandardTrainer:Lookahead:la_steps, Value: 6
      trainer:StandardTrainer:se_lastk, Constant: 3
      trainer:StandardTrainer:use_lookahead_optimizer, Value: True
      trainer:StandardTrainer:use_snapshot_ensemble, Value: True
      trainer:StandardTrainer:use_stochastic_weight_averaging, Value: True
      trainer:StandardTrainer:weighted_loss, Value: True
      trainer:__choice__, Value: 'StandardTrainer'
    , ta_runs=1, ta_time_used=4.928796291351318, wallclock_time=6.37916898727417, budget=5.555555555555555), TrajEntry(train_perf=0.16374269005847952, incumbent_id=2, incumbent=Configuration:
      data_loader:batch_size, Value: 409
      encoder:__choice__, Value: 'OneHotEncoder'
      feature_preprocessor:TruncatedSVD:target_dim, Value: 4
      feature_preprocessor:__choice__, Value: 'TruncatedSVD'
      imputer:categorical_strategy, Value: 'most_frequent'
      imputer:numerical_strategy, Value: 'constant_zero'
      lr_scheduler:CosineAnnealingLR:T_max, Value: 53
      lr_scheduler:__choice__, Value: 'CosineAnnealingLR'
      network_backbone:MLPBackbone:activation, Value: 'relu'
      network_backbone:MLPBackbone:dropout_1, Value: 0.7173131362280667
      network_backbone:MLPBackbone:dropout_2, Value: 0.32527643996037753
      network_backbone:MLPBackbone:num_groups, Value: 2
      network_backbone:MLPBackbone:num_units_1, Value: 165
      network_backbone:MLPBackbone:num_units_2, Value: 244
      network_backbone:MLPBackbone:use_dropout, Value: True
      network_backbone:__choice__, Value: 'MLPBackbone'
      network_embedding:__choice__, Value: 'NoEmbedding'
      network_head:__choice__, Value: 'fully_connected'
      network_head:fully_connected:activation, Value: 'tanh'
      network_head:fully_connected:num_layers, Value: 3
      network_head:fully_connected:units_layer_1, Value: 256
      network_head:fully_connected:units_layer_2, Value: 408
      network_init:OrthogonalInit:bias_strategy, Value: 'Normal'
      network_init:__choice__, Value: 'OrthogonalInit'
      optimizer:RMSpropOptimizer:alpha, Value: 0.44965916725624266
      optimizer:RMSpropOptimizer:lr, Value: 0.0015378712542410064
      optimizer:RMSpropOptimizer:momentum, Value: 0.7354696550868378
      optimizer:RMSpropOptimizer:use_weight_decay, Value: True
      optimizer:RMSpropOptimizer:weight_decay, Value: 3.025630486858573e-06
      optimizer:__choice__, Value: 'RMSpropOptimizer'
      scaler:__choice__, Value: 'StandardScaler'
      trainer:RowCutOutTrainer:cutout_prob, Value: 0.589936979878005
      trainer:RowCutOutTrainer:patch_ratio, Value: 0.40724571391547737
      trainer:RowCutOutTrainer:use_lookahead_optimizer, Value: False
      trainer:RowCutOutTrainer:use_snapshot_ensemble, Value: False
      trainer:RowCutOutTrainer:use_stochastic_weight_averaging, Value: True
      trainer:RowCutOutTrainer:weighted_loss, Value: True
      trainer:__choice__, Value: 'RowCutOutTrainer'
    , ta_runs=11, ta_time_used=62.138296604156494, wallclock_time=86.86269497871399, budget=16.666666666666664), TrajEntry(train_perf=0.17543859649122806, incumbent_id=3, incumbent=Configuration:
      data_loader:batch_size, Value: 214
      encoder:__choice__, Value: 'OneHotEncoder'
      feature_preprocessor:PowerTransformer:standardize, Value: False
      feature_preprocessor:__choice__, Value: 'PowerTransformer'
      imputer:categorical_strategy, Value: 'constant_!missing!'
      imputer:numerical_strategy, Value: 'most_frequent'
      lr_scheduler:StepLR:gamma, Value: 0.5001764838899738
      lr_scheduler:StepLR:step_size, Value: 9
      lr_scheduler:__choice__, Value: 'StepLR'
      network_backbone:MLPBackbone:activation, Value: 'relu'
      network_backbone:MLPBackbone:num_groups, Value: 9
      network_backbone:MLPBackbone:num_units_1, Value: 15
      network_backbone:MLPBackbone:num_units_2, Value: 14
      network_backbone:MLPBackbone:num_units_3, Value: 104
      network_backbone:MLPBackbone:num_units_4, Value: 21
      network_backbone:MLPBackbone:num_units_5, Value: 310
      network_backbone:MLPBackbone:num_units_6, Value: 17
      network_backbone:MLPBackbone:num_units_7, Value: 36
      network_backbone:MLPBackbone:num_units_8, Value: 65
      network_backbone:MLPBackbone:num_units_9, Value: 128
      network_backbone:MLPBackbone:use_dropout, Value: False
      network_backbone:__choice__, Value: 'MLPBackbone'
      network_embedding:LearnedEntityEmbedding:dimension_reduction_0, Value: 0.5789830130232676
      network_embedding:LearnedEntityEmbedding:dimension_reduction_1, Value: 0.4353214239859393
      network_embedding:LearnedEntityEmbedding:dimension_reduction_2, Value: 0.6159715736219504
      network_embedding:LearnedEntityEmbedding:dimension_reduction_3, Value: 0.2788267408521733
      network_embedding:LearnedEntityEmbedding:dimension_reduction_4, Value: 0.6613130909081457
      network_embedding:LearnedEntityEmbedding:dimension_reduction_5, Value: 0.2520745193144416
      network_embedding:LearnedEntityEmbedding:dimension_reduction_6, Value: 0.44698971597433856
      network_embedding:LearnedEntityEmbedding:dimension_reduction_7, Value: 0.12836828395414746
      network_embedding:LearnedEntityEmbedding:min_unique_values_for_embedding, Value: 4
      network_embedding:__choice__, Value: 'LearnedEntityEmbedding'
      network_head:__choice__, Value: 'fully_connected'
      network_head:fully_connected:activation, Value: 'sigmoid'
      network_head:fully_connected:num_layers, Value: 3
      network_head:fully_connected:units_layer_1, Value: 478
      network_head:fully_connected:units_layer_2, Value: 327
      network_init:KaimingInit:bias_strategy, Value: 'Zero'
      network_init:__choice__, Value: 'KaimingInit'
      optimizer:AdamOptimizer:beta1, Value: 0.9270644711842396
      optimizer:AdamOptimizer:beta2, Value: 0.9964481403058396
      optimizer:AdamOptimizer:lr, Value: 0.008902276153550713
      optimizer:AdamOptimizer:use_weight_decay, Value: False
      optimizer:__choice__, Value: 'AdamOptimizer'
      scaler:Normalizer:norm, Value: 'mean_squared'
      scaler:__choice__, Value: 'Normalizer'
      trainer:RowCutMixTrainer:Lookahead:la_alpha, Value: 0.546444697861179
      trainer:RowCutMixTrainer:Lookahead:la_steps, Value: 8
      trainer:RowCutMixTrainer:alpha, Value: 0.4291439030477622
      trainer:RowCutMixTrainer:se_lastk, Constant: 3
      trainer:RowCutMixTrainer:use_lookahead_optimizer, Value: True
      trainer:RowCutMixTrainer:use_snapshot_ensemble, Value: True
      trainer:RowCutMixTrainer:use_stochastic_weight_averaging, Value: False
      trainer:RowCutMixTrainer:weighted_loss, Value: False
      trainer:__choice__, Value: 'RowCutMixTrainer'
    , ta_runs=18, ta_time_used=114.71509408950806, wallclock_time=178.1033229827881, budget=50.0)]
    {'accuracy': 0.8497109826589595}
    |    | Preprocessing                                                     | Estimator                                                    |   Weight |
    |---:|:------------------------------------------------------------------|:-------------------------------------------------------------|---------:|
    |  0 | SimpleImputer,OneHotEncoder,Normalizer,PowerTransformer           | embedding,MLPBackbone,FullyConnectedHead,nn.Sequential       |     0.18 |
    |  1 | None                                                              | ExtraTreesClassifier                                         |     0.16 |
    |  2 | None                                                              | CatBoostClassifier                                           |     0.14 |
    |  3 | None                                                              | RFClassifier                                                 |     0.12 |
    |  4 | SimpleImputer,OneHotEncoder,StandardScaler,TruncSVD               | no embedding,MLPBackbone,FullyConnectedHead,nn.Sequential    |     0.08 |
    |  5 | SimpleImputer,OneHotEncoder,MinMaxScaler,PowerTransformer         | no embedding,ResNetBackbone,FullyConnectedHead,nn.Sequential |     0.08 |
    |  6 | None                                                              | LGBMClassifier                                               |     0.06 |
    |  7 | SimpleImputer,OneHotEncoder,StandardScaler,TruncSVD               | no embedding,MLPBackbone,FullyConnectedHead,nn.Sequential    |     0.04 |
    |  8 | None                                                              | SVC                                                          |     0.04 |
    |  9 | None                                                              | KNNClassifier                                                |     0.04 |
    | 10 | SimpleImputer,OneHotEncoder,StandardScaler,NoFeaturePreprocessing | no embedding,MLPBackbone,FullyConnectedHead,nn.Sequential    |     0.04 |
    | 11 | SimpleImputer,OneHotEncoder,StandardScaler,TruncSVD               | no embedding,MLPBackbone,FullyConnectedHead,nn.Sequential    |     0.02 |
    <smac.runhistory.runhistory.RunHistory object at 0x7f336ecbfee0> [TrajEntry(train_perf=2147483648, incumbent_id=1, incumbent=Configuration:
      data_loader:batch_size, Value: 32
      encoder:__choice__, Value: 'NoEncoder'
      feature_preprocessor:__choice__, Value: 'NoFeaturePreprocessor'
      imputer:categorical_strategy, Value: 'most_frequent'
      imputer:numerical_strategy, Value: 'mean'
      lr_scheduler:ReduceLROnPlateau:factor, Value: 0.1
      lr_scheduler:ReduceLROnPlateau:mode, Value: 'min'
      lr_scheduler:ReduceLROnPlateau:patience, Value: 10
      lr_scheduler:__choice__, Value: 'ReduceLROnPlateau'
      network_backbone:ShapedMLPBackbone:activation, Value: 'relu'
      network_backbone:ShapedMLPBackbone:max_units, Value: 200
      network_backbone:ShapedMLPBackbone:mlp_shape, Value: 'funnel'
      network_backbone:ShapedMLPBackbone:num_groups, Value: 5
      network_backbone:ShapedMLPBackbone:output_dim, Value: 200
      network_backbone:ShapedMLPBackbone:use_dropout, Value: False
      network_backbone:__choice__, Value: 'ShapedMLPBackbone'
      network_embedding:__choice__, Value: 'NoEmbedding'
      network_head:__choice__, Value: 'fully_connected'
      network_head:fully_connected:activation, Value: 'relu'
      network_head:fully_connected:num_layers, Value: 2
      network_head:fully_connected:units_layer_1, Value: 128
      network_init:XavierInit:bias_strategy, Value: 'Normal'
      network_init:__choice__, Value: 'XavierInit'
      optimizer:AdamOptimizer:beta1, Value: 0.9
      optimizer:AdamOptimizer:beta2, Value: 0.9
      optimizer:AdamOptimizer:lr, Value: 0.01
      optimizer:AdamOptimizer:use_weight_decay, Value: True
      optimizer:AdamOptimizer:weight_decay, Value: 0.0001
      optimizer:__choice__, Value: 'AdamOptimizer'
      scaler:__choice__, Value: 'StandardScaler'
      trainer:StandardTrainer:Lookahead:la_alpha, Value: 0.6
      trainer:StandardTrainer:Lookahead:la_steps, Value: 6
      trainer:StandardTrainer:se_lastk, Constant: 3
      trainer:StandardTrainer:use_lookahead_optimizer, Value: True
      trainer:StandardTrainer:use_snapshot_ensemble, Value: True
      trainer:StandardTrainer:use_stochastic_weight_averaging, Value: True
      trainer:StandardTrainer:weighted_loss, Value: True
      trainer:__choice__, Value: 'StandardTrainer'
    , ta_runs=0, ta_time_used=0.0, wallclock_time=0.0017619132995605469, budget=0), TrajEntry(train_perf=0.1871345029239766, incumbent_id=1, incumbent=Configuration:
      data_loader:batch_size, Value: 32
      encoder:__choice__, Value: 'NoEncoder'
      feature_preprocessor:__choice__, Value: 'NoFeaturePreprocessor'
      imputer:categorical_strategy, Value: 'most_frequent'
      imputer:numerical_strategy, Value: 'mean'
      lr_scheduler:ReduceLROnPlateau:factor, Value: 0.1
      lr_scheduler:ReduceLROnPlateau:mode, Value: 'min'
      lr_scheduler:ReduceLROnPlateau:patience, Value: 10
      lr_scheduler:__choice__, Value: 'ReduceLROnPlateau'
      network_backbone:ShapedMLPBackbone:activation, Value: 'relu'
      network_backbone:ShapedMLPBackbone:max_units, Value: 200
      network_backbone:ShapedMLPBackbone:mlp_shape, Value: 'funnel'
      network_backbone:ShapedMLPBackbone:num_groups, Value: 5
      network_backbone:ShapedMLPBackbone:output_dim, Value: 200
      network_backbone:ShapedMLPBackbone:use_dropout, Value: False
      network_backbone:__choice__, Value: 'ShapedMLPBackbone'
      network_embedding:__choice__, Value: 'NoEmbedding'
      network_head:__choice__, Value: 'fully_connected'
      network_head:fully_connected:activation, Value: 'relu'
      network_head:fully_connected:num_layers, Value: 2
      network_head:fully_connected:units_layer_1, Value: 128
      network_init:XavierInit:bias_strategy, Value: 'Normal'
      network_init:__choice__, Value: 'XavierInit'
      optimizer:AdamOptimizer:beta1, Value: 0.9
      optimizer:AdamOptimizer:beta2, Value: 0.9
      optimizer:AdamOptimizer:lr, Value: 0.01
      optimizer:AdamOptimizer:use_weight_decay, Value: True
      optimizer:AdamOptimizer:weight_decay, Value: 0.0001
      optimizer:__choice__, Value: 'AdamOptimizer'
      scaler:__choice__, Value: 'StandardScaler'
      trainer:StandardTrainer:Lookahead:la_alpha, Value: 0.6
      trainer:StandardTrainer:Lookahead:la_steps, Value: 6
      trainer:StandardTrainer:se_lastk, Constant: 3
      trainer:StandardTrainer:use_lookahead_optimizer, Value: True
      trainer:StandardTrainer:use_snapshot_ensemble, Value: True
      trainer:StandardTrainer:use_stochastic_weight_averaging, Value: True
      trainer:StandardTrainer:weighted_loss, Value: True
      trainer:__choice__, Value: 'StandardTrainer'
    , ta_runs=1, ta_time_used=4.259082555770874, wallclock_time=5.854396820068359, budget=5.555555555555555), TrajEntry(train_perf=0.17543859649122806, incumbent_id=2, incumbent=Configuration:
      data_loader:batch_size, Value: 215
      encoder:__choice__, Value: 'NoEncoder'
      feature_preprocessor:__choice__, Value: 'NoFeaturePreprocessor'
      imputer:categorical_strategy, Value: 'constant_!missing!'
      imputer:numerical_strategy, Value: 'most_frequent'
      lr_scheduler:CosineAnnealingLR:T_max, Value: 51
      lr_scheduler:__choice__, Value: 'CosineAnnealingLR'
      network_backbone:ShapedResNetBackbone:activation, Value: 'tanh'
      network_backbone:ShapedResNetBackbone:blocks_per_group, Value: 2
      network_backbone:ShapedResNetBackbone:max_dropout, Value: 0.37376142861116285
      network_backbone:ShapedResNetBackbone:max_units, Value: 106
      network_backbone:ShapedResNetBackbone:multi_branch_choice, Value: 'None'
      network_backbone:ShapedResNetBackbone:num_groups, Value: 1
      network_backbone:ShapedResNetBackbone:output_dim, Value: 979
      network_backbone:ShapedResNetBackbone:resnet_shape, Value: 'stairs'
      network_backbone:ShapedResNetBackbone:use_batch_norm, Value: False
      network_backbone:ShapedResNetBackbone:use_dropout, Value: True
      network_backbone:ShapedResNetBackbone:use_skip_connection, Value: True
      network_backbone:__choice__, Value: 'ShapedResNetBackbone'
      network_embedding:__choice__, Value: 'NoEmbedding'
      network_head:__choice__, Value: 'fully_connected'
      network_head:fully_connected:num_layers, Value: 1
      network_init:XavierInit:bias_strategy, Value: 'Normal'
      network_init:__choice__, Value: 'XavierInit'
      optimizer:RMSpropOptimizer:alpha, Value: 0.21475647146537818
      optimizer:RMSpropOptimizer:lr, Value: 0.06800579072253359
      optimizer:RMSpropOptimizer:momentum, Value: 0.19455509625221876
      optimizer:RMSpropOptimizer:use_weight_decay, Value: False
      optimizer:__choice__, Value: 'RMSpropOptimizer'
      scaler:Normalizer:norm, Value: 'max'
      scaler:__choice__, Value: 'Normalizer'
      trainer:RowCutMixTrainer:Lookahead:la_alpha, Value: 0.6084931276595258
      trainer:RowCutMixTrainer:Lookahead:la_steps, Value: 8
      trainer:RowCutMixTrainer:alpha, Value: 0.6686915138304311
      trainer:RowCutMixTrainer:se_lastk, Constant: 3
      trainer:RowCutMixTrainer:use_lookahead_optimizer, Value: True
      trainer:RowCutMixTrainer:use_snapshot_ensemble, Value: True
      trainer:RowCutMixTrainer:use_stochastic_weight_averaging, Value: True
      trainer:RowCutMixTrainer:weighted_loss, Value: False
      trainer:__choice__, Value: 'RowCutMixTrainer'
    , ta_runs=18, ta_time_used=108.21266293525696, wallclock_time=165.80303597450256, budget=50.0)]
    {'accuracy': 0.861271676300578}
    |    | Preprocessing                                                 | Estimator                                                          |   Weight |
    |---:|:--------------------------------------------------------------|:-------------------------------------------------------------------|---------:|
    |  0 | None                                                          | CatBoostClassifier                                                 |     0.3  |
    |  1 | None                                                          | RFClassifier                                                       |     0.18 |
    |  2 | None                                                          | ExtraTreesClassifier                                               |     0.18 |
    |  3 | SimpleImputer,NoEncoder,Normalizer,NoFeaturePreprocessing     | no embedding,ShapedResNetBackbone,FullyConnectedHead,nn.Sequential |     0.06 |
    |  4 | SimpleImputer,NoEncoder,Normalizer,KitchenSink                | no embedding,ResNetBackbone,FullyConnectedHead,nn.Sequential       |     0.06 |
    |  5 | None                                                          | KNNClassifier                                                      |     0.06 |
    |  6 | SimpleImputer,NoEncoder,Normalizer,Nystroem                   | no embedding,ShapedResNetBackbone,FullyConnectedHead,nn.Sequential |     0.04 |
    |  7 | SimpleImputer,NoEncoder,NoScaler,KitchenSink                  | no embedding,ShapedResNetBackbone,FullyConnectedHead,nn.Sequential |     0.04 |
    |  8 | SimpleImputer,NoEncoder,StandardScaler,PowerTransformer       | no embedding,ResNetBackbone,FullyConnectedHead,nn.Sequential       |     0.02 |
    |  9 | None                                                          | LGBMClassifier                                                     |     0.02 |
    | 10 | None                                                          | SVC                                                                |     0.02 |
    | 11 | SimpleImputer,NoEncoder,StandardScaler,NoFeaturePreprocessing | no embedding,ShapedMLPBackbone,FullyConnectedHead,nn.Sequential    |     0.02 |






|

.. code-block:: default

    import os
    import tempfile as tmp
    import warnings

    os.environ['JOBLIB_TEMP_FOLDER'] = tmp.gettempdir()
    os.environ['OMP_NUM_THREADS'] = '1'
    os.environ['OPENBLAS_NUM_THREADS'] = '1'
    os.environ['MKL_NUM_THREADS'] = '1'

    warnings.simplefilter(action='ignore', category=UserWarning)
    warnings.simplefilter(action='ignore', category=FutureWarning)

    import sklearn.datasets
    import sklearn.model_selection

    from autoPyTorch.api.tabular_classification import TabularClassificationTask
    from autoPyTorch.utils.hyperparameter_search_space_update import HyperparameterSearchSpaceUpdates


    def get_search_space_updates():
        """
        Search space updates to the task can be added using HyperparameterSearchSpaceUpdates
        Returns:
            HyperparameterSearchSpaceUpdates
        """
        updates = HyperparameterSearchSpaceUpdates()
        updates.append(node_name="data_loader",
                       hyperparameter="batch_size",
                       value_range=[16, 512],
                       default_value=32)
        updates.append(node_name="lr_scheduler",
                       hyperparameter="CosineAnnealingLR:T_max",
                       value_range=[50, 60],
                       default_value=55)
        updates.append(node_name='network_backbone',
                       hyperparameter='ResNetBackbone:dropout',
                       value_range=[0, 0.5],
                       default_value=0.2)
        return updates


    if __name__ == '__main__':

        ############################################################################
        # Data Loading
        # ============
        X, y = sklearn.datasets.fetch_openml(data_id=40981, return_X_y=True, as_frame=True)
        X_train, X_test, y_train, y_test = sklearn.model_selection.train_test_split(
            X,
            y,
            random_state=1,
        )

        ############################################################################
        # Build and fit a classifier with include components
        # ==================================================
        api = TabularClassificationTask(
            search_space_updates=get_search_space_updates(),
            include_components={'network_backbone': ['MLPBackbone', 'ResNetBackbone'],
                                'encoder': ['OneHotEncoder']}
        )

        ############################################################################
        # Search for an ensemble of machine learning algorithms
        # =====================================================
        api.search(
            X_train=X_train.copy(),
            y_train=y_train.copy(),
            X_test=X_test.copy(),
            y_test=y_test.copy(),
            optimize_metric='accuracy',
            total_walltime_limit=300,
            func_eval_time_limit_secs=50
        )

        ############################################################################
        # Print the final ensemble performance
        # ====================================
        print(api.run_history, api.trajectory)
        y_pred = api.predict(X_test)
        score = api.score(y_pred, y_test)
        print(score)
        print(api.show_models())

        ############################################################################
        # Build and fit a classifier with exclude components
        # ==================================================
        api = TabularClassificationTask(
            search_space_updates=get_search_space_updates(),
            exclude_components={'network_backbone': ['MLPBackbone'],
                                'encoder': ['OneHotEncoder']}
        )

        ############################################################################
        # Search for an ensemble of machine learning algorithms
        # =====================================================
        api.search(
            X_train=X_train,
            y_train=y_train,
            X_test=X_test.copy(),
            y_test=y_test.copy(),
            optimize_metric='accuracy',
            total_walltime_limit=300,
            func_eval_time_limit_secs=50
        )

        ############################################################################
        # Print the final ensemble performance
        # ====================================
        print(api.run_history, api.trajectory)
        y_pred = api.predict(X_test)
        score = api.score(y_pred, y_test)
        print(score)
        print(api.show_models())


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 11 minutes  27.773 seconds)


.. _sphx_glr_download_advanced_tabular_example_custom_configuration_space.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/automl/Auto-PyTorch/refactor_development?urlpath=lab/tree/notebooks/advanced_tabular/example_custom_configuration_space.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: example_custom_configuration_space.py <example_custom_configuration_space.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: example_custom_configuration_space.ipynb <example_custom_configuration_space.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
